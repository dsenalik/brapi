{
    "modules": {
        "BrAPI": {
            "Calls": {
                "calls": {
                    "/calls": true
                }
            },
            "Crops": {
                "calls": {
                    "/commoncropnames": true,
                    "/crops": true
                }
            },
            "Programs": {
                "calls": {
                    "/programs": true,
                    "/programs-search": true
                }
            },
            "Locations": {
                "calls": {
                    "/locations": true,
                    "/locations/{locationDbId}": true
                }
            },
            "Trials": {
                "calls": {
                    "/trials": true,
                    "/trials/{trialDbId}": true
                }
            },
            "Studies": {
                "calls": {
                    "/seasons": true,
                    "/studies-search": true,
                    "/studies/{studyDbId}": true,
                    "/studies/{studyDbId}/germplasm": true,
                    "/studies/{studyDbId}/layout": true,
                    "/studies/{studyDbId}/observationVariables": true,
                    "/studies/{studyDbId}/observations": true,
                    "/studies/{studyDbId}/observationunits": true,
                    "/studies/{studyDbId}/observationunits/zip": true,
                    "/studies/{studyDbId}/observationvariables": true,
                    "/studies/{studyDbId}/table": true,
                    "/studyTypes": true,
                    "/studytypes": true
                }
            },
            "Observations": {
                "calls": {
                    "/observationLevels": true,
                    "/observationlevels": true,
                    "/phenotypes": true,
                    "/studies/{studyDbId}/observations": true,
                    "/studies/{studyDbId}/observationunits": true,
                    "/studies/{studyDbId}/observationunits/zip": true,
                    "/studies/{studyDbId}/table": true
                }
            },
            "Observation Variables": {
                "calls": {
                    "/ontologies": true,
                    "/studies/{studyDbId}/observationVariables": true,
                    "/studies/{studyDbId}/observationvariables": true,
                    "/traits": true,
                    "/traits/{traitDbId}": true,
                    "/variables": true,
                    "/variables-search": true,
                    "/variables/datatypes": true,
                    "/variables/{observationVariableDbId}": true
                }
            },
            "Phenotypes": {
                "calls": {
                    "/phenotypes": true,
                    "/phenotypes-search": true,
                    "/phenotypes-search/csv": true,
                    "/phenotypes-search/table": true,
                    "/phenotypes-search/tsv": true
                }
            },
            "Germplasm": {
                "calls": {
                    "/breedingmethods": true,
                    "/breedingmethods/{breedingMethodDbId}": true,
                    "/germplasm-search": true,
                    "/germplasm/{germplasmDbId}": true,
                    "/germplasm/{germplasmDbId}/attributes": true,
                    "/germplasm/{germplasmDbId}/markerprofiles": true,
                    "/germplasm/{germplasmDbId}/pedigree": true,
                    "/germplasm/{germplasmDbId}/progeny": true,
                    "/studies/{studyDbId}/germplasm": true
                }
            },
            "Germplasm Attributes": {
                "calls": {
                    "/attributes": true,
                    "/attributes/categories": true,
                    "/germplasm/{germplasmDbId}/attributes": true
                }
            },
            "Markers": {
                "calls": {
                    "/markers": true,
                    "/markers-search": true,
                    "/markers/{markerDbId}": true
                }
            },
            "Marker Profiles": {
                "calls": {
                    "/allelematrices": true,
                    "/allelematrices-search": true,
                    "/allelematrix-search": true,
                    "/markerprofiles": true,
                    "/markerprofiles/{markerprofileDbId}": true
                }
            },
            "Genome Maps": {
                "calls": {
                    "/maps": true,
                    "/maps/{mapDbId}": true,
                    "/maps/{mapDbId}/positions": true,
                    "/maps/{mapDbId}/positions/{linkageGroupName}": true
                }
            },
            "Samples": {
                "calls": {
                    "/samples": true,
                    "/samples-search": true,
                    "/samples/{sampleDbId}": true
                }
            },
            "Vendor Samples": {
                "calls": {
                    "/vendor/plates": true,
                    "/vendor/plates-search": true,
                    "/vendor/plates/{vendorPlateDbId}": true,
                    "/vendor/specifications": true
                }
            },
            "Search Services": {
                "calls": {
                    "/germplasm-search": true,
                    "/phenotypes-search": true,
                    "/phenotypes-search/csv": true,
                    "/phenotypes-search/table": true,
                    "/phenotypes-search/tsv": true,
                    "/programs-search": true,
                    "/samples-search": true,
                    "/studies-search": true,
                    "/vendor/plates-search": true
                }
            },
            "Authentication": {
                "calls": {
                    "/token": true
                }
            },
            "Deprecated": {
                "calls": {
                    "/allelematrix-search": true,
                    "/crops": true,
                    "/markers": true,
                    "/observationLevels": true,
                    "/studies/{studyDbId}/observationVariables": true,
                    "/studies/{studyDbId}/observationunits": true,
                    "/studyTypes": true,
                    "/token": true
                }
            }
        }
    },
    "calls": {
        "/allelematrices": {
            "definition": {
                "get": {
                    "tags": [
                        "Marker Profiles"
                    ],
                    "summary": "Matrices through GET",
                    "description": "<strong>Status</strong>: Proposed\n<strong>Implemented by</strong>: GOBII\n<strong>Used by</strong>: Flapjack\n</br>\nThis resource is used for reading and writing genomic matrices:\n</br>\nGET provides a list of available matrices, optionally filtered by study;\nPOST will provide a means for adding new matrices (content TBD).",
                    "produces": [
                        "application/json"
                    ],
                    "parameters": [
                        {
                            "name": "studyDbId",
                            "in": "query",
                            "description": "restricts the list of matrices to a specific study.",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "type": "integer"
                        },
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "type": "integer"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "examples": {
                                "application/json": {
                                    "metadata": {
                                        "datafiles": [],
                                        "pagination": {
                                            "currentPage": 0,
                                            "pageSize": 1000,
                                            "totalCount": 2,
                                            "totalPages": 1
                                        },
                                        "status": []
                                    },
                                    "result": {
                                        "data": [
                                            {
                                                "description": "a test dataset",
                                                "lastUpdated": "2017-06-12",
                                                "matrixDbId": "27",
                                                "name": "testDs1",
                                                "studyDbId": "abc123"
                                            },
                                            {
                                                "description": "a second test dataset",
                                                "lastUpdated": "2017-06-12",
                                                "matrixDbId": "28",
                                                "name": "testDs2",
                                                "studyDbId": "abc123"
                                            }
                                        ]
                                    }
                                }
                            },
                            "headers": [],
                            "schema": {
                                "$ref": "#/definitions/alleleMatrixDetailsResponse"
                            }
                        }
                    }
                }
            },
            "data_types": []
        },
        "/allelematrices-search": {
            "definition": {
                "get": {
                    "tags": [
                        "Marker Profiles"
                    ],
                    "summary": "Scores through GET",
                    "description": "Status: ACCEPTED.\n\nImplemented by: Germinate (POST only), Cassavabase\n\nUsed by: Flapjack (POST only)\n\nSee <a href=\"#introduction/search-services\">Search Services</a> for additional implementation details.\n\nThis uses a more efficient data structure and pagination for large number of markers.\n\nSee Search Services for additional implementation details.\n</br>\nThis uses a more efficient data structure and pagination for large number of markers. \n</br>\nUse GET when parameter size is less than 2K bytes.\nThis method may support asynchronous processing.",
                    "produces": [
                        "application/json"
                    ],
                    "parameters": [
                        {
                            "name": "markerprofileDbId",
                            "in": "query",
                            "description": "The markerprofile db ids. Not Required if 'markerDbId' or 'matrixDbId' is present.",
                            "required": false,
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "collectionFormat": "multi"
                        },
                        {
                            "name": "markerDbId",
                            "in": "query",
                            "description": "ids of the markers. if none are specified, results are returned for all markers in the database. Not Required if 'markerprofileDbId' or 'matrixDbId' is present.",
                            "required": false,
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "collectionFormat": "multi"
                        },
                        {
                            "name": "matrixDbId",
                            "in": "query",
                            "description": "",
                            "required": false,
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "collectionFormat": "multi"
                        },
                        {
                            "name": "format",
                            "in": "query",
                            "description": "format for the datafile to be downloaded. tsv and csv currently supported; flapjack may be supported.",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "name": "expandHomozygotes",
                            "in": "query",
                            "description": "Should homozygotes NOT be collapsed into a single occurrence?",
                            "required": false,
                            "type": "boolean"
                        },
                        {
                            "name": "unknownString",
                            "in": "query",
                            "description": "The string to use as a representation for missing data or the reserved word \"empty_string\".",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "name": "sepPhased",
                            "in": "query",
                            "description": "The string to use as a separator for phased allele calls or the reserved word \"empty_string\".",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "name": "sepUnphased",
                            "in": "query",
                            "description": "The string to use as a separator for unphased allele calls or the reserved word \"empty_string\".",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "type": "integer"
                        },
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "type": "integer"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "examples": {
                                "application/json": {
                                    "metadata": {
                                        "datafiles": [],
                                        "pagination": {
                                            "currentPage": 0,
                                            "pageSize": 1000,
                                            "totalCount": 4,
                                            "totalPages": 1
                                        },
                                        "status": []
                                    },
                                    "result": {
                                        "data": [
                                            [
                                                "1",
                                                "1",
                                                "A/B"
                                            ],
                                            [
                                                "1",
                                                "2",
                                                "B"
                                            ],
                                            [
                                                "2",
                                                "1",
                                                "A"
                                            ],
                                            [
                                                "2",
                                                "2",
                                                "A/B"
                                            ]
                                        ]
                                    }
                                }
                            },
                            "headers": [],
                            "schema": {
                                "$ref": "#/definitions/alleleMatrixValuesResponse"
                            }
                        }
                    }
                },
                "post": {
                    "tags": [
                        "Marker Profiles"
                    ],
                    "summary": "Scores through POST",
                    "description": "Status: ACCEPTED.\n\nImplemented by: Germinate (POST only), Cassavabase\n\nUsed by: Flapjack (POST only)\n\nSee <a href=\"#introduction/search-services\">Search Services</a> for additional implementation details.\n\nThis uses a more efficient data structure and pagination for large number of markers.\n\nUse POST when parameter size is greater than 2K bytes.\n\n- If no format is specified, this call returns the data in JSON form.\n\n- If a format (other than JSON) is specified and the server supports this format, it will return the link to the exported data file in the \"datafiles\" field of the \"metadata\".\n\n- If more than one format is requested at a time, the server will throw a \"501 Not Implemented\" error.\n\nThe format of the tsv response can be found on GitHub (https://github.com/plantbreeding/Documentation/wiki/BrAPI-TSV-Expected-Formats)",
                    "produces": [
                        "application/json"
                    ],
                    "parameters": [
                        {
                            "in": "body",
                            "name": "markerprofileDbId",
                            "description": "The markerprofile db ids. Not Required if 'markerDbId' or 'matrixDbId' is present.",
                            "required": true,
                            "schema": {
                                "$ref": "#/definitions/alleleMatrixSearchRequest"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "examples": {
                                "application/json": {
                                    "metadata": {
                                        "datafiles": [],
                                        "pagination": {
                                            "currentPage": 0,
                                            "pageSize": 0,
                                            "totalCount": 0,
                                            "totalPages": 0
                                        },
                                        "status": []
                                    },
                                    "result": {
                                        "data": [
                                            [
                                                "1",
                                                "1",
                                                "A/B"
                                            ],
                                            [
                                                "1",
                                                "2",
                                                "B"
                                            ],
                                            [
                                                "2",
                                                "1",
                                                "A"
                                            ],
                                            [
                                                "2",
                                                "2",
                                                "A/B"
                                            ]
                                        ]
                                    }
                                },
                                "application/tsv": {
                                    "metadata": {
                                        "datafiles": [
                                            "https://my-fancy-server/files/allelematrix-1234.tsv"
                                        ],
                                        "pagination": {
                                            "currentPage": 0,
                                            "pageSize": 0,
                                            "totalCount": 0,
                                            "totalPages": 0
                                        },
                                        "status": []
                                    },
                                    "result": {
                                        "data": []
                                    }
                                }
                            },
                            "headers": [],
                            "schema": {
                                "$ref": "#/definitions/alleleMatrixValuesResponse"
                            }
                        }
                    }
                }
            },
            "data_types": []
        },
        "/allelematrix-search": {
            "definition": {
                "get": {
                    "tags": [
                        "Marker Profiles",
                        "Deprecated"
                    ],
                    "summary": "Scores through GET",
                    "description": "Status: ACCEPTED.\n\nImplemented by: Germinate (POST only), Cassavabase\n\nUsed by: Flapjack (POST only)\n\nSee <a href=\"#introduction/search-services\">Search Services</a> for additional implementation details.\n\nThis uses a more efficient data structure and pagination for large number of markers.\n\nSee Search Services for additional implementation details.\n</br>\nThis uses a more efficient data structure and pagination for large number of markers. \n</br>\nUse GET when parameter size is less than 2K bytes.\nThis method may support asynchronous processing.",
                    "produces": [
                        "application/json"
                    ],
                    "parameters": [
                        {
                            "name": "markerprofileDbId",
                            "in": "query",
                            "description": "The markerprofile db ids. Not Required if 'markerDbId' or 'matrixDbId' is present.",
                            "required": false,
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "collectionFormat": "multi"
                        },
                        {
                            "name": "markerDbId",
                            "in": "query",
                            "description": "ids of the markers. if none are specified, results are returned for all markers in the database. Not Required if 'markerprofileDbId' or 'matrixDbId' is present.",
                            "required": false,
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "collectionFormat": "multi"
                        },
                        {
                            "name": "matrixDbId",
                            "in": "query",
                            "description": "",
                            "required": false,
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "collectionFormat": "multi"
                        },
                        {
                            "name": "format",
                            "in": "query",
                            "description": "format for the datafile to be downloaded. tsv and csv currently supported; flapjack may be supported.",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "name": "expandHomozygotes",
                            "in": "query",
                            "description": "Should homozygotes NOT be collapsed into a single occurrence?",
                            "required": false,
                            "type": "boolean"
                        },
                        {
                            "name": "unknownString",
                            "in": "query",
                            "description": "The string to use as a representation for missing data or the reserved word \"empty_string\".",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "name": "sepPhased",
                            "in": "query",
                            "description": "The string to use as a separator for phased allele calls or the reserved word \"empty_string\".",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "name": "sepUnphased",
                            "in": "query",
                            "description": "The string to use as a separator for unphased allele calls or the reserved word \"empty_string\".",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "type": "integer"
                        },
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "type": "integer"
                        }
                    ],
                    "deprecated": true,
                    "responses": {
                        "200": {
                            "description": "OK",
                            "examples": {
                                "application/json": {
                                    "metadata": {
                                        "datafiles": [],
                                        "pagination": {
                                            "currentPage": 0,
                                            "pageSize": 1000,
                                            "totalCount": 4,
                                            "totalPages": 1
                                        },
                                        "status": []
                                    },
                                    "result": {
                                        "data": [
                                            [
                                                "1",
                                                "1",
                                                "A/B"
                                            ],
                                            [
                                                "1",
                                                "2",
                                                "B"
                                            ],
                                            [
                                                "2",
                                                "1",
                                                "A"
                                            ],
                                            [
                                                "2",
                                                "2",
                                                "A/B"
                                            ]
                                        ]
                                    }
                                }
                            },
                            "headers": [],
                            "schema": {
                                "$ref": "#/definitions/alleleMatrixValuesResponse"
                            }
                        }
                    }
                },
                "post": {
                    "tags": [
                        "Marker Profiles",
                        "Deprecated"
                    ],
                    "summary": "Scores through POST",
                    "description": "Status: ACCEPTED.\n\nImplemented by: Germinate (POST only), Cassavabase\n\nUsed by: Flapjack (POST only)\n\nSee <a href=\"#introduction/search-services\">Search Services</a> for additional implementation details.\n\nThis uses a more efficient data structure and pagination for large number of markers.\n\nUse POST when parameter size is greater than 2K bytes.\n\n- If no format is specified, this call returns the data in JSON form.\n\n- If a format (other than JSON) is specified and the server supports this format, it will return the link to the exported data file in the \"datafiles\" field of the \"metadata\".\n\n- If more than one format is requested at a time, the server will throw a \"501 Not Implemented\" error.\n\nThe format of the tsv response can be found on GitHub (https://github.com/plantbreeding/Documentation/wiki/BrAPI-TSV-Expected-Formats)",
                    "produces": [
                        "application/json"
                    ],
                    "parameters": [
                        {
                            "in": "body",
                            "name": "markerprofileDbId",
                            "description": "The markerprofile db ids. Not Required if 'markerDbId' or 'matrixDbId' is present.",
                            "required": true,
                            "schema": {
                                "$ref": "#/definitions/alleleMatrixSearchRequest"
                            }
                        }
                    ],
                    "deprecated": true,
                    "responses": {
                        "200": {
                            "description": "OK",
                            "examples": {
                                "application/json": {
                                    "metadata": {
                                        "datafiles": [],
                                        "pagination": {
                                            "currentPage": 0,
                                            "pageSize": 0,
                                            "totalCount": 0,
                                            "totalPages": 0
                                        },
                                        "status": []
                                    },
                                    "result": {
                                        "data": [
                                            [
                                                "1",
                                                "1",
                                                "A/B"
                                            ],
                                            [
                                                "1",
                                                "2",
                                                "B"
                                            ],
                                            [
                                                "2",
                                                "1",
                                                "A"
                                            ],
                                            [
                                                "2",
                                                "2",
                                                "A/B"
                                            ]
                                        ]
                                    }
                                },
                                "application/tsv": {
                                    "metadata": {
                                        "datafiles": [
                                            "https://my-fancy-server/files/allelematrix-1234.tsv"
                                        ],
                                        "pagination": {
                                            "currentPage": 0,
                                            "pageSize": 0,
                                            "totalCount": 0,
                                            "totalPages": 0
                                        },
                                        "status": []
                                    },
                                    "result": {
                                        "data": []
                                    }
                                }
                            },
                            "headers": [],
                            "schema": {
                                "$ref": "#/definitions/alleleMatrixValuesResponse"
                            }
                        }
                    }
                }
            },
            "data_types": []
        },
        "/attributes": {
            "definition": {
                "get": {
                    "tags": [
                        "Germplasm Attributes"
                    ],
                    "summary": "Attributes by attributeCategoryDbId",
                    "description": " List available attributes.\n<a href=\"https://test-server.brapi.org/brapi/v1/attributes\"> test-server.brapi.org/brapi/v1/attributes</a> ",
                    "produces": [
                        "application/json"
                    ],
                    "parameters": [
                        {
                            "name": "attributeCategoryDbId",
                            "in": "query",
                            "description": "filter for kind of attributes",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "type": "integer"
                        },
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "type": "integer"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "examples": {
                                "application/json": {
                                    "metadata": {
                                        "datafiles": [],
                                        "pagination": {
                                            "currentPage": 0,
                                            "pageSize": 1000,
                                            "totalCount": 1,
                                            "totalPages": 1
                                        },
                                        "status": []
                                    },
                                    "result": {
                                        "data": [
                                            {
                                                "attributeCategoryDbId": "1",
                                                "code": "RHT",
                                                "datatype": "Categorical",
                                                "description": "Allele of marker 11_4769, diagnostic for allele b of reduced-height gene Rht-B1",
                                                "name": "Rht-B1b",
                                                "uri": "http://www.cropontology.org/rdf/CO_321:0000020",
                                                "values": [
                                                    "Present",
                                                    "Absent",
                                                    "Heterozygous"
                                                ]
                                            }
                                        ]
                                    }
                                }
                            },
                            "headers": [],
                            "schema": {
                                "$ref": "#/definitions/germplasmAttributeDefsResponse"
                            }
                        }
                    }
                }
            },
            "data_types": []
        },
        "/attributes/categories": {
            "definition": {
                "get": {
                    "tags": [
                        "Germplasm Attributes"
                    ],
                    "summary": "Germplasm attribute categories",
                    "description": " Scope: OTHER. Status: ACCEPTED.\nImplementation target date: PAG2016\nList all available attribute categories.\n<a href=\"https://test-server.brapi.org/brapi/v1/attributes\"> test-server.brapi.org/brapi/v1/attributes/categories</a>",
                    "parameters": [
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "type": "integer"
                        },
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "type": "integer"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "examples": {
                                "application/json": {
                                    "metadata": {
                                        "datafiles": [],
                                        "pagination": {
                                            "currentPage": 1,
                                            "pageSize": 10,
                                            "totalCount": 2,
                                            "totalPages": 1
                                        },
                                        "status": []
                                    },
                                    "result": {
                                        "data": [
                                            {
                                                "attributeCategoryDbId": "1",
                                                "name": "Morphological"
                                            },
                                            {
                                                "attributeCategoryDbId": "2",
                                                "name": "Agronomic"
                                            }
                                        ]
                                    }
                                }
                            },
                            "headers": [],
                            "schema": {
                                "$ref": "#/definitions/germplasmAttributeCategoriesResponse"
                            }
                        }
                    }
                }
            },
            "data_types": []
        },
        "/breedingmethods": {
            "definition": {
                "get": {
                    "tags": [
                        "Germplasm"
                    ],
                    "summary": "GET List of Breeding Methods",
                    "description": " Scope: Germplasm\nGet the list of germplasm breeding methods available in a system.\n<a>example.com/brapi/v1/breedingmethods</a>",
                    "produces": [
                        "application/json"
                    ],
                    "parameters": [
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "type": "integer"
                        },
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "type": "integer"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "examples": {
                                "application/json": {
                                    "metadata": {
                                        "datafiles": [],
                                        "pagination": {
                                            "currentPage": 0,
                                            "pageSize": 1000,
                                            "totalCount": 2,
                                            "totalPages": 1
                                        },
                                        "status": []
                                    },
                                    "result": {
                                        "data": [
                                            {
                                                "abbreviation": "MBCR",
                                                "breedingMethodDbId": "BM987",
                                                "description": "Backcross to recover a specific gene. The coding in the genealogical table records which parent was used as the male in each cycle. Each entity kept separate.",
                                                "name": "Male Backcross"
                                            },
                                            {
                                                "abbreviation": "DSP",
                                                "breedingMethodDbId": "BM324",
                                                "description": "Derivation through selection of a single plant, inflorescence, fruit or seed from a population",
                                                "name": "Single plant selection"
                                            }
                                        ]
                                    }
                                }
                            },
                            "headers": [],
                            "schema": {
                                "$ref": "#/definitions/breedingMethodsResponse"
                            }
                        }
                    }
                }
            },
            "data_types": []
        },
        "/breedingmethods/{breedingMethodDbId}": {
            "definition": {
                "get": {
                    "tags": [
                        "Germplasm"
                    ],
                    "summary": "GET specific breeding method details",
                    "description": "\n\n<a>example.com/brapi/v1/breedingmethods/{breedingMethodDbId}</a>",
                    "produces": [
                        "application/json"
                    ],
                    "parameters": [
                        {
                            "name": "breedingMethodDbId",
                            "in": "path",
                            "description": "Internal database identifier for a breeding method",
                            "required": true,
                            "type": "string"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "examples": {
                                "application/json": {
                                    "metadata": {
                                        "datafiles": [],
                                        "pagination": {
                                            "currentPage": 0,
                                            "pageSize": 0,
                                            "totalCount": 0,
                                            "totalPages": 0
                                        },
                                        "status": []
                                    },
                                    "result": {
                                        "abbreviation": "MBCR",
                                        "breedingMethodDbId": "BM987",
                                        "description": "Backcross to recover a specific gene. The coding in the genealogical table records which parent was used as the male in each cycle. Each entity kept separate.",
                                        "name": "Male Backcross"
                                    }
                                }
                            },
                            "headers": [],
                            "schema": {
                                "$ref": "#/definitions/breedingMethodResponse"
                            }
                        }
                    }
                }
            },
            "data_types": []
        },
        "/calls": {
            "definition": {
                "get": {
                    "tags": [
                        "Calls"
                    ],
                    "summary": "Call search",
                    "description": "<strong>Implementation Notes</strong>\nHaving a consistent structure for the path string of each call is very important for teams to be able to connect and find errors. Read more on <a href=\"https://github.com/plantbreeding/API/issues/144\">Github</a>.\nHere are the rules for the path of each call that should be returned\n<ul>       \n  <li>Every word in the call path should match the documentation exactly, both in spelling and capitalization. Note that path strings are all lower case, but path parameters are camel case.</li>        \n  <li>Each path should start relative to '/' and therefore should not include '/'</li>\n  <li>No leading or trailing slashes ('/') </li>\n  <li>Path parameters are wrapped in curly braces ('{}'). The name of the path parameter should be spelled exactly as it is specified in the documentation.</li>        \n</ul>\n<table>\n  <tr>\n    <th>Examples</th>\n  </tr>\n  <tr>\n    <td><strong>GOOD</strong></td>\n    <td>\"call\": \"germplasm/{germplasmDbId}/markerprofiles\"</td>\n  </tr> \n  <tr>\n    <td>BAD</td>\n    <td>\"call\": \"germplasm/{<strong>id</strong>}/markerprofiles\"</td>\n  </tr> \n  <tr>\n    <td>BAD</td>\n    <td>\"call\": \"germplasm/{germplasmDbId}/marker<strong>P</strong>rofiles\"</td>\n  </tr>\n  <tr>\n    <td>BAD</td>\n    <td>\"call\": \"germplasm/{germplasm<strong>dbid</strong>}/markerprofiles\"</td>\n  </tr> \n  <tr>\n    <td>BAD</td>\n    <td>\"call\": \"<strong>brapi/v1</strong>/germplasm/{germplasmDbId}/markerprofiles\"</td>\n  </tr>\n  <tr>\n    <td>BAD</td>\n    <td>\"call\": \"<strong>/g</strong>ermplasm/{germplasmDbId}/markerprofile<strong>s/</strong>\"</td>\n  </tr> \n  <tr>\n    <td>BAD</td>\n    <td>\"call\": \"germplasm/<strong>&lt</strong>germplasmDbId<strong>&gt</strong>/markerprofiles\"</td>\n  </tr> \n</table>\n\n<a href=\"https://test-server.brapi.org/brapi/v1/calls\"> test-server.brapi.org/brapi/v1/calls</a>",
                    "produces": [
                        "application/json"
                    ],
                    "parameters": [
                        {
                            "name": "datatype",
                            "in": "query",
                            "description": "The data format supported by the call. Example: `json`",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "type": "integer"
                        },
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "type": "integer"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "examples": {
                                "application/json": {
                                    "metadata": {
                                        "datafiles": [],
                                        "pagination": {
                                            "currentPage": 0,
                                            "pageSize": 1000,
                                            "totalCount": 8,
                                            "totalPages": 1
                                        }
                                    },
                                    "result": {
                                        "data": [
                                            {
                                                "call": "token",
                                                "datatypes": [
                                                    "json"
                                                ],
                                                "methods": [
                                                    "POST",
                                                    "DELETE"
                                                ],
                                                "versions": [
                                                    "1.0",
                                                    "1.1"
                                                ]
                                            },
                                            {
                                                "call": "calls",
                                                "datatypes": [
                                                    "json"
                                                ],
                                                "methods": [
                                                    "GET"
                                                ],
                                                "versions": [
                                                    "1.0",
                                                    "1.1",
                                                    "1.2"
                                                ]
                                            },
                                            {
                                                "call": "allelematrix",
                                                "datatypes": [
                                                    "json",
                                                    "tsv"
                                                ],
                                                "methods": [
                                                    "GET",
                                                    "POST"
                                                ],
                                                "versions": [
                                                    "1.0"
                                                ]
                                            },
                                            {
                                                "call": "observationLevels",
                                                "datatypes": [
                                                    "json"
                                                ],
                                                "methods": [
                                                    "GET"
                                                ],
                                                "versions": [
                                                    "1.0",
                                                    "1.1",
                                                    "1.2"
                                                ]
                                            },
                                            {
                                                "call": "germplasm-search",
                                                "datatypes": [
                                                    "json"
                                                ],
                                                "methods": [
                                                    "GET",
                                                    "POST"
                                                ],
                                                "versions": [
                                                    "1.0",
                                                    "1.1",
                                                    "1.2"
                                                ]
                                            },
                                            {
                                                "call": "germplasm/{germplasmDbId}",
                                                "datatypes": [
                                                    "json"
                                                ],
                                                "methods": [
                                                    "GET"
                                                ],
                                                "versions": [
                                                    "1.0",
                                                    "1.1",
                                                    "1.2"
                                                ]
                                            },
                                            {
                                                "call": "germplasm/{germplasmDbId}/pedigree",
                                                "datatypes": [
                                                    "json"
                                                ],
                                                "methods": [
                                                    "GET"
                                                ],
                                                "versions": [
                                                    "1.1",
                                                    "1.2"
                                                ]
                                            },
                                            {
                                                "call": "germplasm/{germplasmDbId}/markerprofiles",
                                                "datatypes": [
                                                    "json"
                                                ],
                                                "methods": [
                                                    "GET"
                                                ],
                                                "versions": [
                                                    "1.1",
                                                    "1.2"
                                                ]
                                            }
                                        ]
                                    }
                                }
                            },
                            "headers": [],
                            "schema": {
                                "$ref": "#/definitions/callsResponse"
                            }
                        }
                    }
                }
            },
            "data_types": []
        },
        "/commoncropnames": {
            "definition": {
                "get": {
                    "tags": [
                        "Crops"
                    ],
                    "summary": "List supported crops",
                    "description": "List the common crop names for the crops available in a database server. \n\nThis call is **required** for multi-crop systems where data from multiple crops may be stored in the same database server. A distinct database server is defined by everything in the URL before \"/brapi/v1\", including host name and base path.  \n\nThis call is recommended for single crop systems to be compatible with multi-crop clients. For a single crop system the response should contain an array with exactly 1 element. \n\nThe common crop name can be used as a search parameter for Programs, Studies, and Germplasm.\n\n<a href=\"https://test-server.brapi.org/brapi/v1/commonCropNames\"> test-server.brapi.org/brapi/v1/commonCropNames</a>",
                    "produces": [
                        "application/json"
                    ],
                    "parameters": [
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "type": "integer"
                        },
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "type": "integer"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "examples": {
                                "application/json": {
                                    "metadata": {
                                        "datafiles": [],
                                        "pagination": {
                                            "currentPage": 0,
                                            "pageSize": 1000,
                                            "totalCount": 3,
                                            "totalPages": 1
                                        },
                                        "status": []
                                    },
                                    "result": {
                                        "data": [
                                            "maize",
                                            "wheat",
                                            "rice",
                                            "potato"
                                        ]
                                    }
                                }
                            },
                            "headers": [],
                            "schema": {
                                "$ref": "#/definitions/commonCropNamesResponse"
                            }
                        }
                    }
                }
            },
            "data_types": []
        },
        "/crops": {
            "definition": {
                "get": {
                    "tags": [
                        "Crops",
                        "Deprecated"
                    ],
                    "summary": "List supported crops",
                    "description": "For multi crop systems this is a useful call to list all the supported crops.\n\n<a href=\"https://test-server.brapi.org/brapi/v1/crops\"> test-server.brapi.org/brapi/v1/crops</a>",
                    "produces": [
                        "application/json"
                    ],
                    "parameters": [
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "type": "integer"
                        },
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "type": "integer"
                        }
                    ],
                    "deprecated": true,
                    "responses": {
                        "200": {
                            "description": "OK",
                            "examples": {
                                "application/json": {
                                    "metadata": {
                                        "datafiles": [],
                                        "pagination": {
                                            "currentPage": 0,
                                            "pageSize": 1000,
                                            "totalCount": 3,
                                            "totalPages": 1
                                        },
                                        "status": []
                                    },
                                    "result": {
                                        "data": [
                                            "maize",
                                            "wheat",
                                            "rice"
                                        ]
                                    }
                                }
                            },
                            "headers": [],
                            "schema": {
                                "$ref": "#/definitions/commonCropNamesResponse"
                            }
                        }
                    }
                }
            },
            "data_types": []
        },
        "/germplasm-search": {
            "definition": {
                "get": {
                    "tags": [
                        "Germplasm",
                        "Search Services"
                    ],
                    "summary": "Germplasm search through GET",
                    "description": " Implemented by: GnpIS, Germinate (GET only)\nSee <a href=\"#introduction/search-services\">Search Services</a> for additional implementation details.\nNotes: The germplasm and germplasm MCPD calls were merged.  The MCPD fields are optional and indicated as such with the [MCPD] prefix in the description field of the \"Response data types\" table. Please use the \"features\" hash of the \"calls\" call to communicate with clients as to whether MCPD is supported by your implementation.\nAddresses these needs: 1. General germplasm search mechanism that accepts POST for complex queries 2. possibility to search germplasm by more parameters than those allowed by the existing germplasm search 3. possibility to get MCPD details by PUID rather than dbId\nUse GET when parameter size is less than 2K bytes. <a href=\"https://test-server.brapi.org/brapi/v1/germplasm\"> test-server.brapi.org/brapi/v1/germplasm-search</a> ",
                    "produces": [
                        "application/json"
                    ],
                    "parameters": [
                        {
                            "name": "germplasmPUI",
                            "in": "query",
                            "description": "Permanent unique identifier (DOI, URI, etc.)",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "name": "germplasmDbId",
                            "in": "query",
                            "description": "Internal database identifier",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "name": "germplasmName",
                            "in": "query",
                            "description": "Name of the germplasm",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "name": "commonCropName",
                            "in": "query",
                            "description": "The common crop name related to this germplasm",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "type": "integer"
                        },
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "type": "integer"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "examples": {
                                "application/json": {
                                    "metadata": {
                                        "datafiles": [],
                                        "pagination": {
                                            "currentPage": 0,
                                            "pageSize": 1000,
                                            "totalCount": 2,
                                            "totalPages": 1
                                        },
                                        "status": []
                                    },
                                    "result": {
                                        "data": [
                                            {
                                                "accessionNumber": "ITC0609",
                                                "acquisitionDate": "1947-01-31",
                                                "biologicalStatusOfAccessionCode": 412,
                                                "commonCropName": "banana",
                                                "countryOfOriginCode": "UNK",
                                                "defaultDisplayName": "Pahang",
                                                "donors": [
                                                    {
                                                        "donorAccessionNumber": "",
                                                        "donorInstituteCode": "",
                                                        "germplasmPUI": ""
                                                    }
                                                ],
                                                "genus": "Musa",
                                                "germplasmDbId": "01BEL084609",
                                                "germplasmName": "Pahang",
                                                "germplasmPUI": "http://www.crop-diversity.org/mgis/accession/01BEL084609",
                                                "germplasmSeedSource": "Female GID:4/Male GID:4",
                                                "instituteCode": "01BEL084",
                                                "instituteName": "ITC",
                                                "pedigree": "TOBA97/SW90.1057",
                                                "species": "acuminata",
                                                "speciesAuthority": "",
                                                "subtaxa": "sp malaccensis var pahang",
                                                "subtaxaAuthority": "",
                                                "synonyms": [],
                                                "taxonIds": [
                                                    {
                                                        "sourceName": "ncbiTaxon",
                                                        "taxonId": "http://purl.obolibrary.org/obo/NCBITaxon_4641"
                                                    },
                                                    {
                                                        "sourceName": "ciradTaxon",
                                                        "taxonId": "23-E"
                                                    }
                                                ],
                                                "typeOfGermplasmStorageCode": [
                                                    10
                                                ]
                                            },
                                            {
                                                "accessionNumber": "ITC0685",
                                                "acquisitionDate": "1977-01-31",
                                                "biologicalStatusOfAccessionCode": 412,
                                                "commonCropName": "banana",
                                                "countryOfOriginCode": "UNK",
                                                "defaultDisplayName": "Pah",
                                                "donors": [
                                                    {
                                                        "donorAccessionNumber": "",
                                                        "donorInstituteCode": "",
                                                        "germplasmPUI": ""
                                                    }
                                                ],
                                                "genus": "Musa",
                                                "germplasmDbId": "03REL084609",
                                                "germplasmName": "Pah",
                                                "germplasmPUI": "doi:10.15454/328757862534E12",
                                                "germplasmSeedSource": "Female GID:4/Male GID:4",
                                                "instituteCode": "01BEL084",
                                                "instituteName": "ITC",
                                                "pedigree": "TOBA97/SW90.1057",
                                                "species": "acuminata",
                                                "speciesAuthority": "",
                                                "subtaxa": "sp malaccensis var pah",
                                                "subtaxaAuthority": "",
                                                "synonyms": [],
                                                "taxonIds": [
                                                    {
                                                        "sourceName": "ncbiTaxon",
                                                        "taxonId": "http://purl.obolibrary.org/obo/NCBITaxon_4641"
                                                    },
                                                    {
                                                        "sourceName": "ciradTaxon",
                                                        "taxonId": "23-E"
                                                    }
                                                ],
                                                "typeOfGermplasmStorageCode": [
                                                    10
                                                ]
                                            }
                                        ]
                                    }
                                }
                            },
                            "headers": [],
                            "schema": {
                                "$ref": "#/definitions/germplasmResponse"
                            }
                        }
                    }
                },
                "post": {
                    "tags": [
                        "Germplasm",
                        "Search Services"
                    ],
                    "summary": "Germplasm search through POST",
                    "description": " Implemented by: GnpIS, Germinate (GET only)\nSee <a href=\"#introduction/search-services\">Search Services</a> for additional implementation details.\nNotes: The germplasm and germplasm MCPD calls were merged.  The MCPD fields are optional and indicated as such with the [MCPD] prefix in the description field of the \"Response data types\" table. Please use the \"features\" hash of the \"calls\" call to communicate with clients as to whether MCPD is supported by your implementation.\nAddresses these needs: 1. General germplasm search mechanism that accepts POST for complex queries 2. possibility to search germplasm by more parameters than those allowed by the existing germplasm search 3. possibility to get MCPD details by PUID rather than dbId\nUse POST for large queries (>2K bytes). ",
                    "produces": [
                        "application/json"
                    ],
                    "parameters": [
                        {
                            "in": "body",
                            "name": "body",
                            "required": false,
                            "schema": {
                                "$ref": "#/definitions/germplasmSearchRequest"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "examples": {
                                "application/json": {
                                    "metadata": {
                                        "datafiles": [],
                                        "pagination": {
                                            "currentPage": 1,
                                            "pageSize": 100,
                                            "totalCount": 102,
                                            "totalPages": 2
                                        },
                                        "status": []
                                    },
                                    "result": {
                                        "data": [
                                            {
                                                "accessionNumber": "ITC0609",
                                                "acquisitionDate": "1947-01-31",
                                                "biologicalStatusOfAccessionCode": 412,
                                                "commonCropName": "banana",
                                                "countryOfOriginCode": "UNK",
                                                "defaultDisplayName": "Pahang",
                                                "donors": [
                                                    {
                                                        "donorAccessionNumber": "",
                                                        "donorInstituteCode": "",
                                                        "germplasmPUI": ""
                                                    }
                                                ],
                                                "genus": "Musa",
                                                "germplasmDbId": "01BEL084609",
                                                "germplasmName": "Pahang",
                                                "germplasmPUI": "http://www.crop-diversity.org/mgis/accession/01BEL084609",
                                                "germplasmSeedSource": "Female GID:4/Male GID:4",
                                                "instituteCode": "01BEL084",
                                                "instituteName": "ITC",
                                                "pedigree": "TOBA97/SW90.1057",
                                                "species": "acuminata",
                                                "speciesAuthority": "",
                                                "subtaxa": "sp malaccensis var pahang",
                                                "subtaxaAuthority": "",
                                                "synonyms": [],
                                                "taxonIds": [
                                                    {
                                                        "sourceName": "ncbiTaxon",
                                                        "taxonId": "http://purl.obolibrary.org/obo/NCBITaxon_4641"
                                                    },
                                                    {
                                                        "sourceName": "ciradTaxon",
                                                        "taxonId": "23-E"
                                                    }
                                                ],
                                                "typeOfGermplasmStorageCode": [
                                                    10
                                                ]
                                            },
                                            {
                                                "accessionNumber": "ITC0685",
                                                "acquisitionDate": "1977-01-31",
                                                "biologicalStatusOfAccessionCode": 412,
                                                "commonCropName": "banana",
                                                "countryOfOriginCode": "UNK",
                                                "defaultDisplayName": "Pah",
                                                "donors": [
                                                    {
                                                        "donorAccessionNumber": "",
                                                        "donorInstituteCode": "",
                                                        "germplasmPUI": ""
                                                    }
                                                ],
                                                "genus": "Musa",
                                                "germplasmDbId": "03REL084609",
                                                "germplasmName": "Pah",
                                                "germplasmPUI": "doi:10.15454/328757862534E12",
                                                "germplasmSeedSource": "Female GID:4/Male GID:4",
                                                "instituteCode": "01BEL084",
                                                "instituteName": "ITC",
                                                "pedigree": "TOBA97/SW90.1057",
                                                "species": "acuminata",
                                                "speciesAuthority": "",
                                                "subtaxa": "sp malaccensis var pah",
                                                "subtaxaAuthority": "",
                                                "synonyms": [],
                                                "taxonIds": [
                                                    {
                                                        "sourceName": "ncbiTaxon",
                                                        "taxonId": "http://purl.obolibrary.org/obo/NCBITaxon_4641"
                                                    },
                                                    {
                                                        "sourceName": "ciradTaxon",
                                                        "taxonId": "23-E"
                                                    }
                                                ],
                                                "typeOfGermplasmStorageCode": [
                                                    10
                                                ]
                                            }
                                        ]
                                    }
                                }
                            },
                            "headers": [],
                            "schema": {
                                "$ref": "#/definitions/germplasmResponse"
                            }
                        }
                    }
                }
            },
            "data_types": []
        },
        "/germplasm/{germplasmDbId}": {
            "definition": {
                "get": {
                    "tags": [
                        "Germplasm"
                    ],
                    "summary": "Germplasm search by germplasmDbId",
                    "description": " Scope: CORE. Status: ACCEPTED.\nImplementation target date: PAG2016\nImplemented by: Tripal Brapi module, Germinate, Cassavabase\nNote: Germplasm Details by germplasmDbId was merged with Germplasm Multi Crop Passport Data. The MCPD fields are optional and marked with the prefix [MCPD].\n<a href=\"https://test-server.brapi.org/brapi/v1/germplasm\"> test-server.brapi.org/brapi/v1/germplasm/{germplasmDbId}</a> ",
                    "produces": [
                        "application/json"
                    ],
                    "parameters": [
                        {
                            "name": "germplasmDbId",
                            "in": "path",
                            "description": "The internal id of the germplasm",
                            "required": true,
                            "type": "string"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "examples": {
                                "application/json": {
                                    "metadata": {
                                        "datafiles": [],
                                        "pagination": {
                                            "currentPage": 0,
                                            "pageSize": 0,
                                            "totalCount": 0,
                                            "totalPages": 0
                                        },
                                        "status": []
                                    },
                                    "result": {
                                        "accessionNumber": "ITC0609",
                                        "acquisitionDate": "1947-01-31",
                                        "biologicalStatusOfAccessionCode": 412,
                                        "commonCropName": "banana",
                                        "countryOfOriginCode": "UNK",
                                        "defaultDisplayName": "Pahang",
                                        "donors": [
                                            {
                                                "donorAccessionNumber": "",
                                                "donorGermplasmPUI": "",
                                                "donorInstituteCode": ""
                                            }
                                        ],
                                        "genus": "Musa",
                                        "germplasmDbId": "01BEL084609",
                                        "germplasmName": "Pahang",
                                        "germplasmPUI": "http://www.crop-diversity.org/mgis/accession/01BEL084609",
                                        "instituteCode": "01BEL084",
                                        "instituteName": "ITC",
                                        "pedigree": "TOBA97/SW90.1057",
                                        "seedSource": "ITC0609-2016-77",
                                        "species": "acuminata",
                                        "speciesAuthority": "",
                                        "subtaxa": "sp malaccensis var pahang",
                                        "subtaxaAuthority": "",
                                        "synonyms": [],
                                        "taxonIds": [
                                            {
                                                "sourceName": "ncbiTaxon",
                                                "taxonId": "http://purl.obolibrary.org/obo/NCBITaxon_4641"
                                            },
                                            {
                                                "sourceName": "ciradTaxon",
                                                "taxonId": "23-E"
                                            }
                                        ],
                                        "typeOfGermplasmStorageCode": [
                                            10
                                        ]
                                    }
                                }
                            },
                            "headers": [],
                            "schema": {
                                "$ref": "#/definitions/germplasmResponse_1"
                            }
                        }
                    }
                }
            },
            "data_types": []
        },
        "/germplasm/{germplasmDbId}/attributes": {
            "definition": {
                "get": {
                    "tags": [
                        "Germplasm Attributes",
                        "Germplasm"
                    ],
                    "summary": "Germplasm attribute values",
                    "description": "Values for all attributes by default.\n\n<a href=\"https://test-server.brapi.org/brapi/v1/germplasm\"> test-server.brapi.org/brapi/v1/germplasm/{germplasmDbId}/attributes</a>",
                    "produces": [
                        "application/json"
                    ],
                    "parameters": [
                        {
                            "name": "germplasmDbId",
                            "in": "path",
                            "description": "The germplasm characterized",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "name": "attributeDbIds",
                            "in": "query",
                            "description": "Restrict the response to only the listed attributeDbIds.",
                            "required": false,
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "collectionFormat": "multi"
                        },
                        {
                            "name": "attributeList",
                            "in": "query",
                            "description": "**Deprecated** Use \"attributeDbIds\" instead",
                            "required": false,
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "collectionFormat": "multi"
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "type": "integer"
                        },
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "type": "integer"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "examples": {
                                "application/json": {
                                    "metadata": {
                                        "datafiles": [],
                                        "pagination": {
                                            "currentPage": 0,
                                            "pageSize": 1000,
                                            "totalCount": 1,
                                            "totalPages": 1
                                        },
                                        "status": []
                                    },
                                    "result": {
                                        "data": [
                                            {
                                                "attributeCode": "RHT",
                                                "attributeDbId": "1",
                                                "attributeName": "Rht-B1b",
                                                "determinedDate": "2007-05-28",
                                                "value": "Present"
                                            }
                                        ],
                                        "germplasmDbId": "01BEL084609"
                                    }
                                }
                            },
                            "headers": [],
                            "schema": {
                                "$ref": "#/definitions/germplasmAttributeListResponse"
                            }
                        }
                    }
                }
            },
            "data_types": []
        },
        "/germplasm/{germplasmDbId}/markerprofiles": {
            "definition": {
                "get": {
                    "tags": [
                        "Germplasm"
                    ],
                    "summary": "Markerprofiles by germplasmDbId",
                    "description": " Retrieve the markerProfileDbIds for a given Germplasm ID\nScope: GENOTYPING.\nStatus: ACCEPTED.\nImplementation target date: PAG2016\nImplemented by: Germinate, Cassavabase\n<a href=\"https://test-server.brapi.org/brapi/v1/germplasm\"> test-server.brapi.org/brapi/v1/germplasm/{germplasmDbId}/markerprofiles</a> ",
                    "parameters": [
                        {
                            "name": "germplasmDbId",
                            "in": "path",
                            "description": "the internal id of the germplasm",
                            "required": true,
                            "type": "string"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "examples": {
                                "application/json": {
                                    "metadata": {
                                        "datafiles": [],
                                        "pagination": {
                                            "currentPage": 0,
                                            "pageSize": 0,
                                            "totalCount": 0,
                                            "totalPages": 0
                                        },
                                        "status": [
                                            {
                                                "code": "",
                                                "message": ""
                                            }
                                        ]
                                    },
                                    "result": {
                                        "germplasmDbId": "01BEL084609",
                                        "markerprofileDbIds": [
                                            "3939",
                                            "4484",
                                            "3993"
                                        ]
                                    }
                                }
                            },
                            "headers": [],
                            "schema": {
                                "$ref": "#/definitions/germplasmMarkerprofilesListResponse"
                            }
                        }
                    }
                }
            },
            "data_types": []
        },
        "/germplasm/{germplasmDbId}/pedigree": {
            "definition": {
                "get": {
                    "tags": [
                        "Germplasm"
                    ],
                    "summary": "Germplasm pedigree by id",
                    "description": "\nScope: CORE. Status: ACCEPTED.\nImplementation target date: PAG2016\nImplemented by: Germinate, Tripal Brapi Module, Cassavabase (without notation option)\n(http://wheat.pw.usda.gov/ggpages/gopher/administration/Template%20for%20Germplasm%20records.html) or [Lamacraft] (http://link.springer.com/article/10.1007%2FBF00021556).\n<a href=\"https://test-server.brapi.org/brapi/v1/germplasm\"> test-server.brapi.org/brapi/v1/germplasm/{germplasmDbId}/pedigree</a> ",
                    "parameters": [
                        {
                            "name": "germplasmDbId",
                            "in": "path",
                            "description": "the internal id of the germplasm",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "name": "notation",
                            "in": "query",
                            "description": "text representation of the pedigree",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "name": "includeSiblings",
                            "in": "query",
                            "description": "include array of siblings in response",
                            "required": false,
                            "type": "boolean"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "examples": {
                                "application/json": {
                                    "metadata": {
                                        "datafiles": [],
                                        "pagination": {
                                            "currentPage": 0,
                                            "pageSize": 0,
                                            "totalCount": 0,
                                            "totalPages": 0
                                        },
                                        "status": []
                                    },
                                    "result": {
                                        "crossingPlan": "OPEN_POLLINATION",
                                        "crossingYear": "2018",
                                        "defaultDisplayName": "Pahang 1",
                                        "familyCode": "Cree_x_Bonanza_2018",
                                        "germplasmDbId": "01BEL084609",
                                        "parent1DbId": "166",
                                        "parent1Name": "Cree",
                                        "parent1Type": "FEMALE",
                                        "parent2DbId": "143",
                                        "parent2Name": "Bonanza",
                                        "parent2Type": "MALE",
                                        "pedigree": "Cree / Bonanza",
                                        "siblings": [
                                            {
                                                "defaultDisplayName": "Pahang 2",
                                                "germplasmDbId": "383"
                                            },
                                            {
                                                "defaultDisplayName": "Pahang 3",
                                                "germplasmDbId": "384"
                                            }
                                        ]
                                    }
                                }
                            },
                            "headers": [],
                            "schema": {
                                "$ref": "#/definitions/pedigreeResponse"
                            }
                        }
                    }
                }
            },
            "data_types": []
        },
        "/germplasm/{germplasmDbId}/progeny": {
            "definition": {
                "get": {
                    "tags": [
                        "Germplasm"
                    ],
                    "summary": "Germplasm pedigree by id",
                    "description": " Scope: Germplasm\nGet the germplasmDbIds for all the Progeny of a particular germplasm.\n<a href=\"https://test-server.brapi.org/brapi/v1/germplasm\"> test-server.brapi.org/brapi/v1/germplasm/{germplasmDbId}/progeny</a> ",
                    "parameters": [
                        {
                            "name": "germplasmDbId",
                            "in": "path",
                            "description": "the internal id of the germplasm",
                            "required": true,
                            "type": "string"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "examples": {
                                "application/json": {
                                    "metadata": {
                                        "datafiles": [],
                                        "pagination": {
                                            "currentPage": 0,
                                            "pageSize": 0,
                                            "totalCount": 0,
                                            "totalPages": 0
                                        },
                                        "status": []
                                    },
                                    "result": {
                                        "defaultDisplayName": "Pahang",
                                        "germplasmDbId": "382",
                                        "progeny": [
                                            {
                                                "defaultDisplayName": "Child 1",
                                                "germplasmDbId": "402",
                                                "parentType": "FEMALE"
                                            },
                                            {
                                                "defaultDisplayName": "Child 2",
                                                "germplasmDbId": "403",
                                                "parentType": "MALE"
                                            },
                                            {
                                                "defaultDisplayName": "Pahang Selfed",
                                                "germplasmDbId": "405",
                                                "parentType": "SELF"
                                            }
                                        ]
                                    }
                                }
                            },
                            "headers": [],
                            "schema": {
                                "$ref": "#/definitions/progenyResponse"
                            }
                        }
                    }
                }
            },
            "data_types": []
        },
        "/locations": {
            "definition": {
                "get": {
                    "tags": [
                        "Locations"
                    ],
                    "description": "\nImplemented by: Germinate\nGet a list of locations.\n* The `countryCode` is as per [ISO_3166-1_alpha-3](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3) spec.\n* `altitude` is in meters.\n**Note**: Consider revising to describe polygon lat/lan points and check if adopting http://geojson.org/ is worth doing for v1. ",
                    "produces": [
                        "application/json"
                    ],
                    "parameters": [
                        {
                            "name": "locationType",
                            "in": "query",
                            "description": "Filter by location type specified.",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "type": "integer"
                        },
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "type": "integer"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "examples": {
                                "application/json": {
                                    "metadata": {
                                        "datafiles": [],
                                        "pagination": {
                                            "currentPage": 0,
                                            "pageSize": 1000,
                                            "totalCount": 2,
                                            "totalPages": 1
                                        },
                                        "status": []
                                    },
                                    "result": {
                                        "data": [
                                            {
                                                "abbreviation": "IB",
                                                "additionalInfo": {
                                                    "annualMeanRain": "value",
                                                    "soilDescription": "23"
                                                },
                                                "altitude": 12,
                                                "countryCode": "NGA",
                                                "countryName": "Nigeria",
                                                "instituteAddress": "route foo, Clermont Ferrand, France",
                                                "instituteName": "INRA - GDEC",
                                                "latitude": -21.5,
                                                "locationDbId": "abc123",
                                                "locationType": "Breeding Location",
                                                "longitude": 165.5,
                                                "name": "Ibadan"
                                            },
                                            {
                                                "abbreviation": "GO",
                                                "additionalInfo": {
                                                    "name1": "value1",
                                                    "name2": "value2"
                                                },
                                                "altitude": 10,
                                                "countryCode": "IND",
                                                "countryName": "India",
                                                "latitude": 28.36,
                                                "locationDbId": "def456",
                                                "locationType": "Storage Location",
                                                "longitude": 77.12,
                                                "name": "Goa"
                                            }
                                        ]
                                    }
                                }
                            },
                            "headers": [],
                            "schema": {
                                "$ref": "#/definitions/locationsResponse"
                            }
                        }
                    }
                }
            },
            "data_types": []
        },
        "/locations/{locationDbId}": {
            "definition": {
                "get": {
                    "tags": [
                        "Locations"
                    ],
                    "summary": "The internal DB id for a location",
                    "description": " <strong>Implemented by:</strong>  GnpIS\nGet details for a location.\n* The `countryCode` is as per [ISO_3166-1_alpha-3](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3) spec.\n* `altitude` is in meters. ",
                    "parameters": [
                        {
                            "name": "locationDbId",
                            "in": "path",
                            "description": "The internal DB id for a location",
                            "required": true,
                            "type": "string"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "examples": {
                                "application/json": {
                                    "metadata": {
                                        "datafiles": [],
                                        "pagination": {
                                            "currentPage": 0,
                                            "pageSize": 0,
                                            "totalCount": 0,
                                            "totalPages": 0
                                        },
                                        "status": []
                                    },
                                    "result": {
                                        "abbreviation": "IB",
                                        "abreviation": "IB -- DEPRECATED -- see abbreviation",
                                        "additionalInfo": {
                                            "annualMeanRain": "value",
                                            "soilDescription": "23"
                                        },
                                        "altitude": 12,
                                        "countryCode": "NGA",
                                        "countryName": "Nigeria",
                                        "instituteAddress": "road foo, nigeria",
                                        "instituteName": "INRA - GDEC",
                                        "latitude": -21.5,
                                        "locationDbId": "abc123",
                                        "locationType": "Breeding Location",
                                        "longitude": 165.5,
                                        "name": "Ibadan"
                                    }
                                }
                            },
                            "headers": [],
                            "schema": {
                                "$ref": "#/definitions/locationResponse"
                            }
                        }
                    }
                }
            },
            "data_types": []
        },
        "/maps": {
            "definition": {
                "get": {
                    "tags": [
                        "Genome Maps"
                    ],
                    "summary": "Get list of maps",
                    "description": "Get list of maps <br>\n<strong>Status:</strong> ACCEPTED <strong>Implemented by:</strong> Germinate, Cassavabase <strong>Used by:</strong> Flapjack do we need list of parents and specify mapping population?",
                    "produces": [
                        "application/json"
                    ],
                    "parameters": [
                        {
                            "name": "species",
                            "in": "query",
                            "description": "Species name",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "name": "type",
                            "in": "query",
                            "description": "Type of map",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "type": "integer"
                        },
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "type": "integer"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "examples": {
                                "application/json": {
                                    "metadata": {
                                        "datafiles": [],
                                        "pagination": {
                                            "currentPage": 0,
                                            "pageSize": 1000,
                                            "totalCount": 2,
                                            "totalPages": 1
                                        },
                                        "status": []
                                    },
                                    "result": {
                                        "data": [
                                            {
                                                "comments": "This map contains ...",
                                                "linkageGroupCount": 7,
                                                "mapDbId": "abc123",
                                                "markerCount": 1000,
                                                "name": "Some Map",
                                                "publishedDate": "2008-04-16",
                                                "species": "Some species",
                                                "type": "Genetic",
                                                "unit": "cM"
                                            },
                                            {
                                                "comments": "this is blah blah",
                                                "linkageGroupCount": 7,
                                                "mapDbId": "def234",
                                                "markerCount": 1501,
                                                "name": "Some Other map",
                                                "publishedDate": "2009-01-12",
                                                "species": "Some Species",
                                                "type": "Genetic",
                                                "unit": "cM"
                                            }
                                        ]
                                    }
                                }
                            },
                            "headers": [],
                            "schema": {
                                "$ref": "#/definitions/genomeMapsResponse"
                            }
                        }
                    }
                }
            },
            "data_types": []
        },
        "/maps/{mapDbId}": {
            "definition": {
                "get": {
                    "tags": [
                        "Genome Maps"
                    ],
                    "summary": "Get map details",
                    "description": "Provides the number of markers on each linkageGroup and the max position on the linkageGroup <br>\n<strong>Status:</strong> ACCEPTED <strong>Implemented by:</strong> Germinate, Cassavabase <strong>Used by:</strong> Flapjack",
                    "produces": [
                        "application/json"
                    ],
                    "parameters": [
                        {
                            "name": "mapDbId",
                            "in": "path",
                            "description": "The internal db id of a selected map",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "type": "integer"
                        },
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "type": "integer"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "examples": {
                                "application/json": {
                                    "metadata": {
                                        "datafiles": [],
                                        "pagination": {
                                            "currentPage": 0,
                                            "pageSize": 1000,
                                            "totalCount": 2,
                                            "totalPages": 1
                                        },
                                        "status": []
                                    },
                                    "result": {
                                        "data": [
                                            {
                                                "linkageGroupName": "1",
                                                "markerCount": 100000,
                                                "maxPosition": 10000000
                                            },
                                            {
                                                "linkageGroupName": "2",
                                                "markerCount": 1247,
                                                "maxPosition": 12347889
                                            }
                                        ],
                                        "linkageGroups": [
                                            "DEPRECATED - Replaced by 'data' in v1.1"
                                        ],
                                        "mapDbId": "abc123",
                                        "name": "Some map",
                                        "type": "Genetic",
                                        "unit": "cM"
                                    }
                                }
                            },
                            "headers": [],
                            "schema": {
                                "$ref": "#/definitions/mapDetailsResponse"
                            }
                        }
                    }
                }
            },
            "data_types": []
        },
        "/maps/{mapDbId}/positions": {
            "definition": {
                "get": {
                    "tags": [
                        "Genome Maps"
                    ],
                    "summary": "Get map data",
                    "description": "markers ordered by linkageGroup and position <br>\n<strong>Status:</strong> ACCEPTED. <strong>Implemented by:</strong> Germinate, Cassavabase <strong>Used by:</strong> Flapjack",
                    "produces": [
                        "application/json"
                    ],
                    "parameters": [
                        {
                            "name": "mapDbId",
                            "in": "path",
                            "description": "unique id of the map",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "name": "linkageGroupId",
                            "in": "query",
                            "description": "<strong>Deprecated</strong> Use linkageGroupName instead",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "name": "linkageGroupName",
                            "in": "query",
                            "description": "The chromosome identifier or the generic linkage group identifier if the chromosome is not applicable.",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "type": "integer"
                        },
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "type": "integer"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "examples": {
                                "application/json": {
                                    "metadata": {
                                        "datafiles": [],
                                        "pagination": {
                                            "currentPage": 0,
                                            "pageSize": 1000,
                                            "totalCount": 2,
                                            "totalPages": 1
                                        },
                                        "status": []
                                    },
                                    "result": {
                                        "data": [
                                            {
                                                "linkageGroupName": "1A",
                                                "location": "1000",
                                                "markerDbId": "1",
                                                "markerName": "marker1"
                                            },
                                            {
                                                "linkageGroupName": "1A",
                                                "location": "1001",
                                                "markerDbId": "2",
                                                "markerName": "marker2"
                                            }
                                        ]
                                    }
                                }
                            },
                            "headers": [],
                            "schema": {
                                "$ref": "#/definitions/markersResponse"
                            }
                        }
                    }
                }
            },
            "data_types": []
        },
        "/maps/{mapDbId}/positions/{linkageGroupName}": {
            "definition": {
                "get": {
                    "tags": [
                        "Genome Maps"
                    ],
                    "summary": "Get map data by range on linkageGroup",
                    "description": "markers ordered by linkageGroup and position",
                    "produces": [
                        "application/json"
                    ],
                    "parameters": [
                        {
                            "name": "mapDbId",
                            "in": "path",
                            "description": "unique id of the map",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "name": "linkageGroupName",
                            "in": "path",
                            "description": "The chromosome identifier or the generic linkage group identifier if the chromosome is not applicable.",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "name": "min",
                            "in": "query",
                            "description": "minimum position on linkage group",
                            "required": false,
                            "type": "integer"
                        },
                        {
                            "name": "max",
                            "in": "query",
                            "description": "maximum position on linkage group",
                            "required": false,
                            "type": "integer"
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "type": "integer"
                        },
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "type": "integer"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "examples": {
                                "application/json": {
                                    "metadata": {
                                        "datafiles": [],
                                        "pagination": {
                                            "currentPage": 0,
                                            "pageSize": 1000,
                                            "totalCount": 2,
                                            "totalPages": 1
                                        },
                                        "status": []
                                    },
                                    "result": {
                                        "data": [
                                            {
                                                "location": "1000",
                                                "markerDbId": "1",
                                                "markerName": "marker1"
                                            },
                                            {
                                                "location": "1001",
                                                "markerDbId": "2",
                                                "markerName": "marker2"
                                            }
                                        ]
                                    }
                                }
                            },
                            "headers": [],
                            "schema": {
                                "$ref": "#/definitions/markersResponse_1"
                            }
                        }
                    }
                }
            },
            "data_types": []
        },
        "/markerprofiles": {
            "definition": {
                "get": {
                    "tags": [
                        "Marker Profiles"
                    ],
                    "summary": "Retrieve Markerprofile Ids",
                    "description": "<strong>Scope</strong>: GENOTYPING.\n<strong>Status</strong>: ACCEPTED.\n<strong>Implemented by</strong>: Germinate\n<strong>Used by</strong>: Flapjack\n</br>\nFor the requested Germplasm Id and/or Extract Id, returns the Markerprofile Id and number of non-missing allele calls (marker/allele pairs).",
                    "produces": [
                        "application/json"
                    ],
                    "parameters": [
                        {
                            "name": "germplasmDbId",
                            "in": "query",
                            "description": "The server's internal ids for the Germplasm IDs, as returned by the <strong>Find markerprofile by Germplasm</strong> service.",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "name": "studyDbId",
                            "in": "query",
                            "description": "The server's internal id for the StudyDbId",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "name": "sampleDbId",
                            "in": "query",
                            "description": "The server's internal id for the SampleDbId",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "name": "extractDbId",
                            "in": "query",
                            "description": "The server's internal id for the ExtractDbId",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The number of allele call results (marker/allele pairs) to be returned in the response. If multiple experiments are requested, some responses will contain the last results from one experiment followed by the first results from the next.",
                            "required": false,
                            "type": "integer"
                        },
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Required if `pageSize` is given; and requires that `pageSize` be given. The page indexing starts at 0 (the first page is 'page'=0)",
                            "required": false,
                            "type": "integer"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "examples": {
                                "application/json": {
                                    "metadata": {
                                        "datafiles": [],
                                        "pagination": {
                                            "currentPage": 0,
                                            "pageSize": 1000,
                                            "totalCount": 2,
                                            "totalPages": 1
                                        },
                                        "status": []
                                    },
                                    "result": {
                                        "data": [
                                            {
                                                "analysisMethod": "GoldenGate",
                                                "extractDbId": "3939",
                                                "germplasmDbId": "01BEL084609S",
                                                "markerprofileDbId": "993",
                                                "resultCount": 1470,
                                                "sampleDbId": "3937",
                                                "uniqueDisplayName": "MyFancyGermplasm"
                                            },
                                            {
                                                "analysisMethod": "GBS",
                                                "extractDbId": "3939",
                                                "germplasmDbId": "2374",
                                                "markerprofileDbId": "994",
                                                "resultCount": 1470,
                                                "sampleDbId": "1234",
                                                "uniqueDisplayName": "Germplasm2"
                                            }
                                        ]
                                    }
                                }
                            },
                            "headers": [],
                            "schema": {
                                "$ref": "#/definitions/markerProfileDescriptionsResponse"
                            }
                        }
                    }
                }
            },
            "data_types": []
        },
        "/markerprofiles/{markerprofileDbId}": {
            "definition": {
                "get": {
                    "tags": [
                        "Marker Profiles"
                    ],
                    "summary": "Alleles By Markerprofile Id",
                    "description": "<strong>Scope</strong>:GENOTYPING.\n<strong>Status</strong>: ACCEPTED.\n<strong>Implemented by</strong>: Germinate, Cassavabase\n</br>\nFor the requested markerprofile ID, returns the allele call for each marker. \n[Example](http://malt.pw.usda.gov/t3/wheatplus/markerprofiles/1784_99/count?analysisMethod=GoldenGate)\n</br>\n<strong>Allele encodings</strong>\n\n- Unknown data will by default be encoded by \"N\"\n- Homozygotes are returned as a single occurance, e.g. AA -> A, GG -> G\n- Phased heterozygotes are by default separated by a pipe (\"|\") and unphased heterozygotes are by default separated by a forward slash (\"/\")\n- Dominant markers such as DArTs: 1 for present, 0 for absent\n\n<strong>Parameters</strong>\n- If the user would like to use an empty string (\"\") for any of the parameters, the value should be set to the reserved word \"empty_string\", e.g. sepUnphased=empty_string.\n\n<strong>Open issue:</strong>\nThe pages of data will need to be sorted sensibly in order for the\nrequested page to be delivered consistently.  By map or genome position?\nAlphabetically?'",
                    "parameters": [
                        {
                            "name": "markerprofileDbId",
                            "in": "path",
                            "description": "The server's internal id for the markerprofile",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "name": "expandHomozygotes",
                            "in": "query",
                            "description": "Should homozygotes NOT be collapsed into a single orrucance?",
                            "required": false,
                            "type": "boolean"
                        },
                        {
                            "name": "unknownString",
                            "in": "query",
                            "description": "The string to use as a representation for missing data or the reserved word \"empty_string\".",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "name": "sepPhased",
                            "in": "query",
                            "description": "The string to use as a separator for phased allele calls or the reserved word \"empty_string\".",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "name": "sepUnphased",
                            "in": "query",
                            "description": "The string to use as a separator for unphased allele calls or the reserved word \"empty_string\".",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The number of allele call results (marker/allele pairs) to be returned in the response. If multiple experiments are requested, some responses will contain the last results from one experiment followed by the first results from the next.",
                            "required": false,
                            "type": "integer"
                        },
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Required if `pageSize` is given; and requires that `pageSize` be given. The page indexing starts at 0 (the first page is 'page'=0)",
                            "required": false,
                            "type": "integer"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "examples": {
                                "application/json": {
                                    "metadata": {
                                        "datafiles": [],
                                        "pagination": {
                                            "currentPage": 0,
                                            "pageSize": 22,
                                            "totalCount": 22,
                                            "totalPages": 1
                                        },
                                        "status": []
                                    },
                                    "result": {
                                        "analysisMethod": "GBS",
                                        "data": [
                                            {
                                                "marker1-1": "1"
                                            },
                                            {
                                                "marker1-2": "0"
                                            },
                                            {
                                                "marker1-3": "0"
                                            },
                                            {
                                                "marker1-4": "0"
                                            },
                                            {
                                                "marker1-5": "0"
                                            },
                                            {
                                                "marker1-6": "1"
                                            },
                                            {
                                                "marker1-7": "0"
                                            },
                                            {
                                                "marker1-8": "0"
                                            },
                                            {
                                                "marker1-9": "0"
                                            },
                                            {
                                                "marker1-10": "1"
                                            },
                                            {
                                                "marker1-11": "0"
                                            },
                                            {
                                                "marker2-1": "0"
                                            },
                                            {
                                                "marker2-2": "1"
                                            },
                                            {
                                                "marker2-3": "1"
                                            },
                                            {
                                                "marker2-4": "1"
                                            },
                                            {
                                                "marker2-5": "0"
                                            },
                                            {
                                                "marker3-1": "1"
                                            },
                                            {
                                                "marker3-2": "1"
                                            },
                                            {
                                                "marker3-3": "0"
                                            },
                                            {
                                                "marker3-4": "0"
                                            },
                                            {
                                                "marker3-5": "0"
                                            },
                                            {
                                                "marker3-6": "0"
                                            }
                                        ],
                                        "extractDbId": "extract1",
                                        "germplasmDbId": "1",
                                        "markerprofileDbId": "993",
                                        "uniqueDisplayName": "My Fancy Germplasm"
                                    }
                                }
                            },
                            "headers": [],
                            "schema": {
                                "$ref": "#/definitions/markerProfilesResponse"
                            }
                        }
                    }
                }
            },
            "data_types": []
        },
        "/markers": {
            "definition": {
                "get": {
                    "tags": [
                        "Markers",
                        "Deprecated"
                    ],
                    "summary": "Markers Search (/markers)",
                    "description": " Scope: CORE.  Status: ACCEPTED.\nImplemented by: Germinate\nSee <a href=\"#introduction/search-services\">Search Services</a> for additional implementation details.\nOther service requests use the servers internal `markerDbId`. This service returns marker records that provide the markerDbId. For the requested name or synonym, returns an array (possibly empty) of marker records that match the search criteria. - If there is none, an empty array is returned. - If there is one or more than one match, returns an array of all marker records that match the search criteria. ",
                    "produces": [
                        "application/json"
                    ],
                    "parameters": [
                        {
                            "name": "name",
                            "in": "query",
                            "description": "The name or synonym.",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "name": "matchMethod",
                            "in": "query",
                            "description": "Possible values are 'case_insensitive', 'exact'\n(case sensitive), 'wildcard' (which is case insensitive). Wildcard uses both '*' and '%' for any number of characters\nand '?' for one character matching. Default is exact.",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "name": "include",
                            "in": "query",
                            "description": "Whether to include synonyms in the output.",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "name": "type",
                            "in": "query",
                            "description": "The type of the marker.",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "type": "integer"
                        },
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "type": "integer"
                        }
                    ],
                    "deprecated": true,
                    "responses": {
                        "200": {
                            "description": "OK",
                            "examples": {
                                "application/json": {
                                    "metadata": {
                                        "data": [
                                            {
                                                "analysisMethods": [
                                                    "illumina",
                                                    "kasp"
                                                ],
                                                "defaultDisplayName": "11_10002",
                                                "markerDbId": "1185",
                                                "refAlt": [
                                                    "A",
                                                    "T"
                                                ],
                                                "synonyms": [
                                                    "i_11_10002",
                                                    "POPA1_0002"
                                                ],
                                                "type": "SNP"
                                            },
                                            {
                                                "analysisMethods": [
                                                    "illumina",
                                                    "kasp"
                                                ],
                                                "defaultDisplayName": "11_11159",
                                                "markerDbId": "1186",
                                                "refAlt": [
                                                    "A",
                                                    "T"
                                                ],
                                                "synonyms": [
                                                    "i_11_11159",
                                                    "POPA1_1159"
                                                ],
                                                "type": "SNP"
                                            }
                                        ],
                                        "datafiles": [],
                                        "pagination": {
                                            "currentPage": 0,
                                            "pageSize": 1000,
                                            "totalCount": 2,
                                            "totalPages": 1
                                        },
                                        "status": []
                                    }
                                }
                            },
                            "headers": [],
                            "schema": {
                                "$ref": "#/definitions/markersResponse_2"
                            }
                        }
                    }
                }
            },
            "data_types": []
        },
        "/markers-search": {
            "definition": {
                "get": {
                    "tags": [
                        "Markers"
                    ],
                    "summary": "Markers Search (GET)",
                    "description": " Scope: CORE.  Status: ACCEPTED.\nImplemented by: Germinate\nSee <a href=\"#introduction/search-services\">Search Services</a> for additional implementation details.\nOther service requests use the servers internal `markerDbId`. This service returns marker records that provide the markerDbId. For the requested name or synonym, returns an array (possibly empty) of marker records that match the search criteria. - If there is none, an empty array is returned. - If there is one or more than one match, returns an array of all marker records that match the search criteria. ",
                    "produces": [
                        "application/json"
                    ],
                    "parameters": [
                        {
                            "name": "markerDbIds",
                            "in": "query",
                            "description": "The database IDs of the markers to search for",
                            "required": false,
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "collectionFormat": "multi"
                        },
                        {
                            "name": "name",
                            "in": "query",
                            "description": "The search pattern for a marker name or synonym. Examples: \"11_10002\" \"11_1%\" \"11_1*\" \"11_10?02\"",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "name": "matchMethod",
                            "in": "query",
                            "description": "Possible values are 'case_insensitive', 'exact'\n(case sensitive), 'wildcard' (which is case insensitive). Wildcard uses both '*' and '%' for any number of characters\nand '?' for one character matching. Default is exact.",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "name": "includeSynonyms",
                            "in": "query",
                            "description": "Whether to include synonyms in the output.",
                            "required": false,
                            "type": "boolean"
                        },
                        {
                            "name": "type",
                            "in": "query",
                            "description": "The type of the marker.",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "type": "integer"
                        },
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "type": "integer"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "examples": {
                                "application/json": {
                                    "metadata": {
                                        "datafiles": [],
                                        "pagination": {
                                            "currentPage": 0,
                                            "pageSize": 1000,
                                            "totalCount": 2,
                                            "totalPages": 1
                                        },
                                        "status": []
                                    },
                                    "result": {
                                        "data": [
                                            {
                                                "analysisMethods": [
                                                    "illumina",
                                                    "kasp"
                                                ],
                                                "defaultDisplayName": "11_10002",
                                                "markerDbId": "1185",
                                                "refAlt": [
                                                    "A",
                                                    "T"
                                                ],
                                                "synonyms": [
                                                    "i_11_10002",
                                                    "POPA1_0002"
                                                ],
                                                "type": "SNP"
                                            },
                                            {
                                                "analysisMethods": [
                                                    "illumina",
                                                    "kasp"
                                                ],
                                                "defaultDisplayName": "11_11159",
                                                "markerDbId": "1186",
                                                "refAlt": [
                                                    "A",
                                                    "T"
                                                ],
                                                "synonyms": [
                                                    "i_11_11159",
                                                    "POPA1_1159"
                                                ],
                                                "type": "SNP"
                                            }
                                        ]
                                    }
                                }
                            },
                            "headers": [],
                            "schema": {
                                "$ref": "#/definitions/markersResponse_2"
                            }
                        }
                    }
                },
                "post": {
                    "tags": [
                        "Markers"
                    ],
                    "summary": "Markers Search (POST)",
                    "description": " Scope: CORE.  Status: ACCEPTED.\nImplemented by: Germinate\nSee <a href=\"#introduction/search-services\">Search Services</a> for additional implementation details.\nOther service requests use the servers internal `markerDbId`. This service returns marker records that provide the markerDbId. For the requested name or synonym, returns an array (possibly empty) of marker records that match the search criteria. - If there is none, an empty array is returned. - If there is one or more than one match, returns an array of all marker records that match the search criteria. ",
                    "produces": [
                        "application/json"
                    ],
                    "parameters": [
                        {
                            "in": "body",
                            "name": "markerDbIds",
                            "description": "The database IDs of the markers to search for",
                            "required": false,
                            "schema": {
                                "$ref": "#/definitions/markersSearchRequest"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "examples": {
                                "application/json": {
                                    "metadata": {
                                        "datafiles": [],
                                        "pagination": {
                                            "currentPage": 0,
                                            "pageSize": 1000,
                                            "totalCount": 2,
                                            "totalPages": 1
                                        },
                                        "status": []
                                    },
                                    "result": {
                                        "data": [
                                            {
                                                "analysisMethods": [
                                                    "illumina",
                                                    "kasp"
                                                ],
                                                "defaultDisplayName": "11_10002",
                                                "markerDbId": "1185",
                                                "refAlt": [
                                                    "A",
                                                    "T"
                                                ],
                                                "synonyms": [
                                                    "i_11_10002",
                                                    "POPA1_0002"
                                                ],
                                                "type": "SNP"
                                            },
                                            {
                                                "analysisMethods": [
                                                    "illumina",
                                                    "kasp"
                                                ],
                                                "defaultDisplayName": "11_11159",
                                                "markerDbId": "1186",
                                                "refAlt": [
                                                    "A",
                                                    "T"
                                                ],
                                                "synonyms": [
                                                    "i_11_11159",
                                                    "POPA1_1159"
                                                ],
                                                "type": "SNP"
                                            }
                                        ]
                                    }
                                }
                            },
                            "headers": [],
                            "schema": {
                                "$ref": "#/definitions/markersResponse_2"
                            }
                        }
                    }
                }
            },
            "data_types": []
        },
        "/markers/{markerDbId}": {
            "definition": {
                "get": {
                    "tags": [
                        "Markers"
                    ],
                    "summary": "Marker Details by id",
                    "description": "<strong>Status</strong>: ACCEPTED \n<strong>Implemented By</strong>:",
                    "parameters": [
                        {
                            "name": "markerDbId",
                            "in": "path",
                            "description": "the internal id of the marker",
                            "required": true,
                            "type": "string"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "examples": {
                                "application/json": {
                                    "metadata": {
                                        "datafiles": [],
                                        "pagination": {
                                            "currentPage": 0,
                                            "pageSize": 0,
                                            "totalCount": 0,
                                            "totalPages": 0
                                        },
                                        "status": []
                                    },
                                    "result": {
                                        "analysisMethods": [
                                            "illumina",
                                            "kasp"
                                        ],
                                        "defaultDisplayName": "11_10002",
                                        "markerDbId": "1185",
                                        "refAlt": [
                                            "A",
                                            "T"
                                        ],
                                        "synonyms": [
                                            "i_11_10002",
                                            "POPA1_0002"
                                        ],
                                        "type": "SNP"
                                    }
                                }
                            },
                            "headers": [],
                            "schema": {
                                "$ref": "#/definitions/markerResponse"
                            }
                        }
                    }
                }
            },
            "data_types": []
        },
        "/observationLevels": {
            "definition": {
                "get": {
                    "tags": [
                        "Observations",
                        "Deprecated"
                    ],
                    "summary": "<strong>Deprecated</strong> List observation levels",
                    "description": " Call to retrieve the list of supported observation levels. Observation levels indicate the granularity level at which the measurements are taken. The values are used to supply the `observationLevel` parameter in the observation unit details call. ",
                    "produces": [
                        "application/json"
                    ],
                    "parameters": [
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "type": "integer"
                        },
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "type": "integer"
                        }
                    ],
                    "deprecated": true,
                    "responses": {
                        "200": {
                            "description": "OK",
                            "examples": {
                                "application/json": {
                                    "metadata": {
                                        "datafiles": [],
                                        "pagination": {
                                            "currentPage": 0,
                                            "pageSize": 1000,
                                            "totalCount": 2,
                                            "totalPages": 1
                                        },
                                        "status": []
                                    },
                                    "result": {
                                        "data": [
                                            "plant",
                                            "plot"
                                        ]
                                    }
                                }
                            },
                            "headers": [],
                            "schema": {
                                "$ref": "#/definitions/observationLevelsResponse"
                            }
                        }
                    }
                }
            },
            "data_types": []
        },
        "/observationlevels": {
            "definition": {
                "get": {
                    "tags": [
                        "Observations"
                    ],
                    "summary": "Get Observation Levels",
                    "description": " Call to retrieve the list of supported observation levels. Observation levels indicate the granularity level at which the measurements are taken. The values are used to supply the `observationLevel` parameter in the observation unit details call.\n<a href=\"https://test-server.brapi.org/brapi/v1/observationlevels\"> test-server.brapi.org/brapi/v1/observationlevels</a>",
                    "produces": [
                        "application/json"
                    ],
                    "parameters": [
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "type": "integer"
                        },
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "type": "integer"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "examples": {
                                "application/json": {
                                    "metadata": {
                                        "datafiles": [],
                                        "pagination": {
                                            "currentPage": 0,
                                            "pageSize": 1000,
                                            "totalCount": 2,
                                            "totalPages": 1
                                        },
                                        "status": []
                                    },
                                    "result": {
                                        "data": [
                                            "plant",
                                            "plot"
                                        ]
                                    }
                                }
                            },
                            "headers": [],
                            "schema": {
                                "$ref": "#/definitions/observationLevelsResponse"
                            }
                        }
                    }
                }
            },
            "data_types": []
        },
        "/ontologies": {
            "definition": {
                "get": {
                    "tags": [
                        "Observation Variables"
                    ],
                    "summary": "Variable ontology list",
                    "description": "Call to retrieve a list of observation variable ontologies available in the system. <br>\n<strong>Scope:</strong> CORE. \n<strong>Status:</strong> ACCEPTED.",
                    "produces": [
                        "application/json"
                    ],
                    "parameters": [
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "type": "integer"
                        },
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "type": "integer"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "examples": {
                                "application/json": {
                                    "metadata": {
                                        "datafiles": [],
                                        "pagination": {
                                            "currentPage": 0,
                                            "pageSize": 1000,
                                            "totalCount": 2,
                                            "totalPages": 1
                                        },
                                        "status": []
                                    },
                                    "result": {
                                        "data": [
                                            {
                                                "authors": "J. Snow, H. Peterson",
                                                "copyright": "2016, INRA",
                                                "description": "developped for European genetic studies projects",
                                                "licence": "CC BY-SA 4.0",
                                                "ontologyDbId": "CO_334",
                                                "ontologyName": "Wheat ontology",
                                                "version": "v1.2"
                                            },
                                            {
                                                "authors": "J. Doe",
                                                "copyright": "2017, IRRI",
                                                "description": "developped for IRRI and amended with partners needs",
                                                "licence": "CC BY-SA 4.0",
                                                "ontologyDbId": "CO_335",
                                                "ontologyName": "Rice ontology",
                                                "version": "v2"
                                            }
                                        ]
                                    }
                                }
                            },
                            "headers": [],
                            "schema": {
                                "$ref": "#/definitions/ontologiesResponse"
                            }
                        }
                    }
                }
            },
            "data_types": []
        },
        "/phenotypes": {
            "definition": {
                "post": {
                    "tags": [
                        "Phenotypes",
                        "Observations"
                    ],
                    "summary": "Save Observation Unit Phenotypes",
                    "description": "Scope: PHENOTYPING. \n\nNotes: \nAlong with the study specific phenotype saving calls (in the observationUnit and table formats), this call allows phenotypes to be saved and images to optionally be transferred as well.\n      \nCall to invoke for saving the measurements (observations) collected\nfrom field for all the observation units.\nObservation timestamp should be ISO 8601 https://www.w3.org/TR/NOTE-datetime\nIn case where JSON data is zipped for faster transfer speed (as in the case\nof the IRRI handheld implementation), the zipped JSON file will be listed\nin datafiles. The zipped file contains a JSON file with the same structure\nas the BrAPI call. In this case a format parameter should be passed as well.\nImages can be optionally be uploaded using this call by providing a zipfile\nof all images in the datafiles, along with the actual zipfile in multi-part\nform data.",
                    "produces": [
                        "application/json"
                    ],
                    "parameters": [
                        {
                            "name": "format",
                            "in": "query",
                            "description": "In case where JSON data is zipped for faster transfer speed (as in the case of the IRRI handheld implementation), the zipped JSON file will be listed in datafiles. The zipped file contains a JSON file with the same structure as the BrAPI call.",
                            "required": false,
                            "type": "string",
                            "enum": [
                                "json",
                                "zip"
                            ]
                        },
                        {
                            "in": "body",
                            "name": "body",
                            "required": false,
                            "schema": {
                                "$ref": "#/definitions/phenotypesRequest"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "examples": {
                                "metadata": {
                                    "datafiles": [],
                                    "pagination": {
                                        "currentPage": 0,
                                        "pageSize": 0,
                                        "totalCount": 0,
                                        "totalPages": 0
                                    },
                                    "status": []
                                },
                                "result": {
                                    "observations": [
                                        {
                                            "observationDbId": "153453453",
                                            "observationUnitDbId": "333888",
                                            "observationVariableDbId": "18020"
                                        },
                                        {
                                            "observationDbId": "23456",
                                            "observationUnitDbId": "333888",
                                            "observationVariableDbId": "18021"
                                        },
                                        {
                                            "observationDbId": "34567",
                                            "observationUnitDbId": "333888",
                                            "observationVariableDbId": "18022"
                                        }
                                    ]
                                }
                            },
                            "headers": [],
                            "schema": {
                                "$ref": "#/definitions/newObservationDbIdsResponse"
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "examples": [],
                            "headers": []
                        }
                    }
                }
            },
            "data_types": []
        },
        "/phenotypes-search": {
            "definition": {
                "get": {
                    "tags": [
                        "Phenotypes",
                        "Search Services"
                    ],
                    "summary": "Phenotype Search",
                    "description": "Scope: PHENOTYPING.\nStatus: ACCEPTED.\n\nReturns a list of observationUnit with the observed Phenotypes.\n\nSee <a href=\"#introduction/search-services\">Search Services</a> for additional implementation details.\n\nImplemented for GnpIS and PHIS data (https://urgi.versailles.inra.fr/ws/webresources/brapi/v1/phenotypes). \nUse case: this section allows to get a dataset from multiple studies. It allows to integrate data from several databases.\nRefactor note : This call allows to get and integrate portions of multiple phenotyping data matrixes. A proposed evolution allowed to get a list of single observations, this functionality is still possible with this call by specifybing the observation variable, see below.\nExample Use cases:\n- Study a panel of germplasm accross multiple studies, search parameters : {\"germplasmDbIds\" : [ \"Syrah\", \"34Mtp362\" ]}\n- Get all data for a specific study : {\"studyDbIds\" : [ \"383\" ]}\n- Get simple atomic phenotyping values : {\"germplasmDbIds\" : [ \"Syrah\", \"34Mtp362\" ], \"observationVariableDbIds\" : [ \"CO_345:0000043\"]}\n- Study Locations for adaptation to climat change : {\"locationDbIds\" : [ \"383838\", \"MONTPELLIER\" ], \"germplasmDbIds\" : [ \"all ids for a given species\"]}\n- Find phenotypes that are from after a certain timestamp\n\nobservationTimeStamp : Iso Standard 8601.\n\nobservationValue data type inferred from the ontology",
                    "produces": [
                        "application/json"
                    ],
                    "parameters": [
                        {
                            "name": "germplasmDbId",
                            "in": "query",
                            "description": "The name or synonym of external genebank accession identifiers",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "name": "observationVariableDbId",
                            "in": "query",
                            "description": "The ID of traits, could be ontology ID, database ID or PUI",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "name": "studyDbId",
                            "in": "query",
                            "description": "The database ID / PK of the studies search parameter",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "name": "locationDbId",
                            "in": "query",
                            "description": "locations these traits were collected",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "name": "trialDbId",
                            "in": "query",
                            "description": "trial to search across",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "name": "programDbId",
                            "in": "query",
                            "description": "program that have phenotyped this trait",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "name": "seasonDbId",
                            "in": "query",
                            "description": "The year or Phenotyping campaign of a multi-annual study (trees, grape, ...)",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "name": "observationLevel",
                            "in": "query",
                            "description": "The type of the observationUnit. Returns only the observation unit of the specified type; the parent levels ID can be accessed through observationUnitStructure.",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "name": "observationTimeStampRangeStart",
                            "in": "query",
                            "description": "Timestamp range start",
                            "required": false,
                            "type": "string",
                            "format": "date-time"
                        },
                        {
                            "name": "observationTimeStampRangeEnd",
                            "in": "query",
                            "description": "Timestamp range end",
                            "required": false,
                            "type": "string",
                            "format": "date-time"
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is 1000.",
                            "required": false,
                            "type": "integer"
                        },
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is 0.",
                            "required": false,
                            "type": "integer"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "examples": {
                                "application/json": {
                                    "metadata": {
                                        "datafiles": [],
                                        "pagination": {
                                            "currentPage": 0,
                                            "pageSize": 100,
                                            "totalCount": 2,
                                            "totalPages": 1
                                        },
                                        "status": []
                                    },
                                    "result": {
                                        "data": [
                                            {
                                                "X": "5",
                                                "Y": "15",
                                                "blockNumber": "2",
                                                "entryNumber": "4",
                                                "entryType": "check",
                                                "germplasmDbId": "doi:10.155454/12349537E12",
                                                "germplasmName": "IR-8",
                                                "observationLevel": "plot",
                                                "observationLevels": "bloc:2,subBloc:1,plot:2016-Maugio-34-575-abc-123",
                                                "observationUnitDbId": "2016-Maugio-34-575-abc-123",
                                                "observationUnitName": "2016-Maugio-34-575",
                                                "observationUnitXref": [
                                                    {
                                                        "id": "SAMEA179865230",
                                                        "source": "biosampleEBI"
                                                    },
                                                    {
                                                        "id": "INRA:CoeSt6 _SMH03",
                                                        "source": "gnpis.lot"
                                                    },
                                                    {
                                                        "id": "239865",
                                                        "source": "kernelDB"
                                                    }
                                                ],
                                                "observations": [
                                                    {
                                                        "collector": "Mr. Technician",
                                                        "observationDbId": "153453453",
                                                        "observationTimeStamp": "2015-06-16T08:53:26.000+0000",
                                                        "observationVariableDbId": "CO_321:0000045",
                                                        "observationVariableName": "Plant_height",
                                                        "season": "2015",
                                                        "value": "45"
                                                    },
                                                    {
                                                        "collector": "Mr. Technician",
                                                        "observationDbId": "23453454345",
                                                        "observationTimeStamp": "2015-06-16T08:53:26.000+0000",
                                                        "observationVariableDbId": "CO_321:0000996",
                                                        "observationVariableName": "GW100_g",
                                                        "season": "2015",
                                                        "value": "3"
                                                    }
                                                ],
                                                "plantNumber": "0",
                                                "plotNumber": "2016-Maugio-34-575-abc-123",
                                                "programName": "Whealbi",
                                                "replicate": "0",
                                                "studyDbId": "YieldStudy2015-5",
                                                "studyLocation": "Montpellier",
                                                "studyLocationDbId": "mtp-north-32",
                                                "studyName": "Yield wheat 2015",
                                                "treatments": [
                                                    {
                                                        "factor": "water regimen",
                                                        "modality": "water deficit"
                                                    }
                                                ]
                                            },
                                            {
                                                "X": "6",
                                                "Y": "15",
                                                "blockNumber": "3",
                                                "entryNumber": "7",
                                                "entryType": "test",
                                                "germplasmDbId": "doi:10.155499/12349537E00",
                                                "germplasmName": "ZE-45",
                                                "observationLevel": "plant",
                                                "observationLevels": "bloc:2,subBloc:1,plot:2016-Maugio-34-575-abc-123",
                                                "observationUnitDbId": "45204",
                                                "observationUnitName": "2010-Cornell-37-99",
                                                "observations": [
                                                    {
                                                        "collector": "Mr. Technician",
                                                        "observationDbId": "153453453",
                                                        "observationTimeStamp": "2010-06-16T08:53:26.000+0000",
                                                        "observationVariableDbId": "CO_321:0000045",
                                                        "observationVariableName": "Plant_height",
                                                        "season": "2010",
                                                        "value": "45"
                                                    },
                                                    {
                                                        "collector": "Mr. Technician",
                                                        "observationDbId": "23453454345",
                                                        "observationTimeStamp": "2010-06-16T08:53:26.000+0000",
                                                        "observationVariableDbId": "CO_321:0000996",
                                                        "observationVariableName": "GW100_g",
                                                        "season": "2010",
                                                        "value": "3"
                                                    }
                                                ],
                                                "plantNumber": "45204",
                                                "plotNumber": "2016-Maugio-34-575-abc-123",
                                                "programName": "Wheat for futur",
                                                "replicate": "2",
                                                "studyDbId": "YieldStudy2010-5",
                                                "studyLocation": "Cornell",
                                                "studyLocationDbId": "88484",
                                                "studyName": "Yield wheat 2010",
                                                "treatments": []
                                            }
                                        ]
                                    }
                                }
                            },
                            "headers": [],
                            "schema": {
                                "$ref": "#/definitions/observationUnitsResponse"
                            }
                        }
                    }
                },
                "post": {
                    "tags": [
                        "Phenotypes",
                        "Search Services"
                    ],
                    "summary": "Phenotype Search",
                    "description": "Scope: PHENOTYPING.\nStatus: ACCEPTED.\n\nReturns a list of observationUnit with the observed Phenotypes.\n\nSee <a href=\"#introduction/search-services\">Search Services</a> for additional implementation details.\n\nImplemented for GnpIS and PHIS data (https://urgi.versailles.inra.fr/ws/webresources/brapi/v1/phenotypes). \nUse case: this section allows to get a dataset from multiple studies. It allows to integrate data from several databases.\nRefactor note : This call allows to get and integrate portions of multiple phenotyping data matrixes. A proposed evolution allowed to get a list of single observations, this functionality is still possible with this call by specifybing the observation variable, see below.\nExample Use cases:\n- Study a panel of germplasm accross multiple studies, search parameters : {\"germplasmDbIds\" : [ \"Syrah\", \"34Mtp362\" ]}\n- Get all data for a specific study : {\"studyDbIds\" : [ \"383\" ]}\n- Get simple atomic phenotyping values : {\"germplasmDbIds\" : [ \"Syrah\", \"34Mtp362\" ], \"observationVariableDbIds\" : [ \"CO_345:0000043\"]}\n- Study Locations for adaptation to climat change : {\"locationDbIds\" : [ \"383838\", \"MONTPELLIER\" ], \"germplasmDbIds\" : [ \"all ids for a given species\"]}\n- Find phenotypes that are from after a certain timestamp\n\nobservationTimeStamp : Iso Standard 8601.\n\nobservationValue data type inferred from the ontology",
                    "produces": [
                        "application/json"
                    ],
                    "parameters": [
                        {
                            "in": "body",
                            "name": "body",
                            "required": false,
                            "schema": {
                                "$ref": "#/definitions/phenotypesSearchRequest"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "examples": {
                                "application/json": {
                                    "metadata": {
                                        "datafiles": [],
                                        "pagination": {
                                            "currentPage": 0,
                                            "pageSize": 100,
                                            "totalCount": 2,
                                            "totalPages": 1
                                        },
                                        "status": []
                                    },
                                    "result": {
                                        "data": [
                                            {
                                                "X": "5",
                                                "Y": "15",
                                                "blockNumber": "2",
                                                "entryNumber": "4",
                                                "entryType": "check",
                                                "germplasmDbId": "doi:10.155454/12349537E12",
                                                "germplasmName": "IR-8",
                                                "observationLevel": "plot",
                                                "observationLevels": "bloc:2,subBloc:1,plot:2016-Maugio-34-575-abc-123",
                                                "observationUnitDbId": "2016-Maugio-34-575-abc-123",
                                                "observationUnitName": "2016-Maugio-34-575",
                                                "observationUnitXref": [
                                                    {
                                                        "id": "SAMEA179865230",
                                                        "source": "biosampleEBI"
                                                    },
                                                    {
                                                        "id": "INRA:CoeSt6 _SMH03",
                                                        "source": "gnpis.lot"
                                                    },
                                                    {
                                                        "id": "239865",
                                                        "source": "kernelDB"
                                                    }
                                                ],
                                                "observations": [
                                                    {
                                                        "collector": "Mr. Technician",
                                                        "observationDbId": "153453453",
                                                        "observationTimeStamp": "2015-06-16T08:53:26.000+0000",
                                                        "observationVariableDbId": "CO_321:0000045",
                                                        "observationVariableName": "Plant_height",
                                                        "season": "2015",
                                                        "value": "45"
                                                    },
                                                    {
                                                        "collector": "Mr. Technician",
                                                        "observationDbId": "23453454345",
                                                        "observationTimeStamp": "2015-06-16T08:53:26.000+0000",
                                                        "observationVariableDbId": "CO_321:0000996",
                                                        "observationVariableName": "GW100_g",
                                                        "season": "2015",
                                                        "value": "3"
                                                    }
                                                ],
                                                "plantNumber": "0",
                                                "plotNumber": "2016-Maugio-34-575-abc-123",
                                                "programName": "Whealbi",
                                                "replicate": "0",
                                                "studyDbId": "YieldStudy2015-5",
                                                "studyLocation": "Montpellier",
                                                "studyLocationDbId": "mtp-north-32",
                                                "studyName": "Yield wheat 2015",
                                                "treatments": [
                                                    {
                                                        "factor": "water regimen",
                                                        "modality": "water deficit"
                                                    }
                                                ]
                                            },
                                            {
                                                "X": "6",
                                                "Y": "15",
                                                "blockNumber": "3",
                                                "entryNumber": "7",
                                                "entryType": "test",
                                                "germplasmDbId": "doi:10.155499/12349537E00",
                                                "germplasmName": "ZE-45",
                                                "observationLevel": "plant",
                                                "observationLevels": "bloc:2,subBloc:1,plot:2016-Maugio-34-575-abc-123",
                                                "observationUnitDbId": "45204",
                                                "observationUnitName": "2010-Cornell-37-99",
                                                "observations": [
                                                    {
                                                        "collector": "Mr. Technician",
                                                        "observationDbId": "153453453",
                                                        "observationTimeStamp": "2010-06-16T08:53:26.000+0000",
                                                        "observationVariableDbId": "CO_321:0000045",
                                                        "observationVariableName": "Plant_height",
                                                        "season": "2010",
                                                        "value": "45"
                                                    },
                                                    {
                                                        "collector": "Mr. Technician",
                                                        "observationDbId": "23453454345",
                                                        "observationTimeStamp": "2010-06-16T08:53:26.000+0000",
                                                        "observationVariableDbId": "CO_321:0000996",
                                                        "observationVariableName": "GW100_g",
                                                        "season": "2010",
                                                        "value": "3"
                                                    }
                                                ],
                                                "plantNumber": "45204",
                                                "plotNumber": "2016-Maugio-34-575-abc-123",
                                                "programName": "Wheat for futur",
                                                "replicate": "2",
                                                "studyDbId": "YieldStudy2010-5",
                                                "studyLocation": "Cornell",
                                                "studyLocationDbId": "88484",
                                                "studyName": "Yield wheat 2010",
                                                "treatments": []
                                            }
                                        ]
                                    }
                                }
                            },
                            "headers": [],
                            "schema": {
                                "$ref": "#/definitions/observationUnitsResponse"
                            }
                        }
                    }
                }
            },
            "data_types": []
        },
        "/phenotypes-search/csv": {
            "definition": {
                "post": {
                    "tags": [
                        "Phenotypes",
                        "Search Services"
                    ],
                    "summary": "Phenotype Search CSV",
                    "description": "Scope: PHENOTYPING.\nStatus: ACCEPTED.\n\nReturns a list of observationUnit with the observed Phenotypes.\n      \nobservationTimeStamp : Iso Standard 8601.\n\nobservationValue data type inferred from the ontology",
                    "produces": [
                        "text/csv"
                    ],
                    "parameters": [
                        {
                            "in": "body",
                            "name": "body",
                            "required": false,
                            "schema": {
                                "$ref": "#/definitions/phenotypesSearchRequest"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "examples": {
                                "text/csv": "\"year\",\"studyDbId\",\"studyName\",\"locationDbId\",\"locationName\",\"germplasmDbId\",\"germplasmName\",\"observationUnitDbId\",\"plotNumber\",\"replicate\",\"blockNumber\", \"entryType\", \"X\", \"Y\", \"variableDbId1\", \"variableDbId2\", \"variableDbId3\"\n\"2015\", \"YieldStudy2015-5\", \"Yield wheat 2015\", \"mtp-north-32\", \"Montpellier\", \"doi:10.155454/12349537E12\", \"IR-8\", \"2016-Maugio-34-575-abc-123\", \"120\", \"\", \"2\", \"\", \"5\", \"15\", \"45\", \"3\", \"10\"\n\"2016\", \"YieldStudy2016-5\", \"Yield wheat 2016\", \"mtp-north-32\", \"Montpellier\", \"doi:10.155454/12349537E13\", \"IR-8\", \"2016-Maugio-34-575-abc-124\", \"120\", \"\", \"2\", \"\", \"5\", \"15\", \"47\", \"4\", \"11\""
                            },
                            "headers": [],
                            "schema": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "data_types": []
        },
        "/phenotypes-search/table": {
            "definition": {
                "post": {
                    "tags": [
                        "Phenotypes",
                        "Search Services"
                    ],
                    "summary": "Phenotype Search Table",
                    "description": "Scope: PHENOTYPING.\nStatus: ACCEPTED.\n\nReturns a list of observationUnit with the observed Phenotypes.\n      \nobservationTimeStamp : Iso Standard 8601.\n\nobservationValue data type inferred from the ontology",
                    "produces": [
                        "application/json"
                    ],
                    "parameters": [
                        {
                            "in": "body",
                            "name": "body",
                            "required": false,
                            "schema": {
                                "$ref": "#/definitions/phenotypesSearchRequest"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "examples": {
                                "application/json": {
                                    "metadata": {
                                        "datafiles": [],
                                        "pagination": {
                                            "currentPage": 0,
                                            "pageSize": 1000,
                                            "totalCount": 2,
                                            "totalPages": 1
                                        },
                                        "status": []
                                    },
                                    "result": {
                                        "data": [
                                            [
                                                "2017",
                                                "stu1",
                                                "Study Name",
                                                "loc1",
                                                "Location Name",
                                                "CIP1",
                                                "CIP Name",
                                                "abc123",
                                                1,
                                                1,
                                                1,
                                                "2017-06-16T00:53:26Z",
                                                "Test Entry",
                                                "1",
                                                "2",
                                                "25.3",
                                                "103.4",
                                                "50.75"
                                            ],
                                            [
                                                "2017",
                                                "stu1",
                                                "Study Name",
                                                "loc1",
                                                "Location Name",
                                                "CIP1",
                                                "CIP Name",
                                                "abc124",
                                                1,
                                                1,
                                                1,
                                                "2017-06-16T00:54:57Z",
                                                "Test Entry",
                                                "2",
                                                "2",
                                                "27.9",
                                                "98.65",
                                                "45.345"
                                            ]
                                        ],
                                        "headerRow": [
                                            "year",
                                            "studyDbId",
                                            "studyName",
                                            "locationDbId",
                                            "locationName",
                                            "germplasmDbId",
                                            "germplasmName",
                                            "observationUnitDbId",
                                            "plotNumber",
                                            "replicate",
                                            "blockNumber",
                                            "observationTimestamp",
                                            "entryType",
                                            "X",
                                            "Y"
                                        ],
                                        "observationVariableDbIds": [
                                            "variable1DbId",
                                            "variable2DbId",
                                            "variable3DbId"
                                        ],
                                        "observationVariableNames": [
                                            "plant height",
                                            "fruit weight",
                                            "root weight"
                                        ]
                                    }
                                }
                            },
                            "headers": [],
                            "schema": {
                                "$ref": "#/definitions/observationUnitsTableResponse_1"
                            }
                        }
                    }
                }
            },
            "data_types": []
        },
        "/phenotypes-search/tsv": {
            "definition": {
                "post": {
                    "tags": [
                        "Phenotypes",
                        "Search Services"
                    ],
                    "summary": "Phenotype Search TSV",
                    "description": "Scope: PHENOTYPING.\nStatus: ACCEPTED.\n\nReturns a list of observationUnit with the observed Phenotypes.\n      \nobservationTimeStamp : Iso Standard 8601.\n\nobservationValue data type inferred from the ontology",
                    "produces": [
                        "text/csv"
                    ],
                    "parameters": [
                        {
                            "in": "body",
                            "name": "body",
                            "required": false,
                            "schema": {
                                "$ref": "#/definitions/phenotypesSearchRequest"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "examples": {
                                "text/csv": "\"year\"    \"studyDbId\"    \"studyName\"    \"locationDbId\"    \"locationName\"    \"germplasmDbId\"    \"germplasmName\"    \"observationUnitDbId\"    \"plotNumber\"    \"replicate\"    \"blockNumber\"    \"entryType\"    \"X\"    \"Y\"     \"variableDbId1\"    \"variableDbId2\"    \"variableDbId3\"\n\"2015\"    \"YieldStudy2015-5\"    \"Yield wheat 2015\"    \"mtp-north-32\"    \"Montpellier\"    \"doi:10.155454/12349537E12\"    \"IR-8\"    \"2016-Maugio-34-575-abc-123\"    \"120\"    \"\"    \"2\"    \"\"    \"5\"    \"15\"    \"45\"    \"3\"    \"10\"\n\"2016\"    \"YieldStudy2016-5\"    \"Yield wheat 2016\"    \"mtp-north-32\"    \"Montpellier\"    \"doi:10.155454/12349537E13\"    \"IR-8\"    \"2016-Maugio-34-575-abc-124\"    \"120\"    \"\"    \"2\"    \"\"    \"5\"    \"15\"    \"47\"    \"4\"    \"11\""
                            },
                            "headers": [],
                            "schema": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "data_types": []
        },
        "/programs": {
            "definition": {
                "get": {
                    "tags": [
                        "Programs"
                    ],
                    "summary": "List programs",
                    "description": " Call to retrieve a list of programs.\nStatus: ACCEPTED Implemented By:\n<a href=\"https://test-server.brapi.org/brapi/v1/programs\"> test-server.brapi.org/brapi/v1/programs</a>",
                    "produces": [
                        "application/json"
                    ],
                    "parameters": [
                        {
                            "name": "programName",
                            "in": "query",
                            "description": "Filter by program name. Exact match.",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "name": "abbreviation",
                            "in": "query",
                            "description": "Filter by program abbreviation. Exact match.",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "type": "integer"
                        },
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "type": "integer"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "examples": {
                                "application/json": {
                                    "metadata": {
                                        "datafiles": [],
                                        "pagination": {
                                            "currentPage": 0,
                                            "pageSize": 1000,
                                            "totalCount": 2,
                                            "totalPages": 1
                                        },
                                        "status": []
                                    },
                                    "result": {
                                        "data": [
                                            {
                                                "abbreviation": "DRP1",
                                                "leadPerson": "Dr. Henry Beachell",
                                                "name": "Wheat Resistance Program",
                                                "objective": "Disease resistance",
                                                "programDbId": "123"
                                            },
                                            {
                                                "abbreviation": "DRP2",
                                                "leadPerson": "Dr. Norman Borlaug",
                                                "name": "Wheat Improvement Program",
                                                "objective": "Yield improvement",
                                                "programDbId": "456"
                                            }
                                        ]
                                    }
                                }
                            },
                            "headers": [],
                            "schema": {
                                "$ref": "#/definitions/programsResponse"
                            }
                        }
                    }
                }
            },
            "data_types": []
        },
        "/programs-search": {
            "definition": {
                "post": {
                    "tags": [
                        "Programs",
                        "Search Services"
                    ],
                    "summary": "Search Programs",
                    "description": " Advanced searching for the programs resource.\nStatus: ACCEPTED.\nSee <a href=\"#introduction/search-services\">Search Services</a> for additional implementation details.\n",
                    "produces": [
                        "application/json"
                    ],
                    "parameters": [
                        {
                            "in": "body",
                            "name": "body",
                            "required": false,
                            "schema": {
                                "$ref": "#/definitions/programsSearchRequest"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "examples": {
                                "application/json": {
                                    "metadata": {
                                        "datafiles": [],
                                        "pagination": {
                                            "currentPage": 0,
                                            "pageSize": 1000,
                                            "totalCount": 2,
                                            "totalPages": 1
                                        },
                                        "status": []
                                    },
                                    "result": {
                                        "data": [
                                            {
                                                "abbreviation": "DRP1",
                                                "leadPerson": "Dr. Henry Beachell",
                                                "name": "Wheat Resistance Program",
                                                "objective": "Disease resistance",
                                                "programDbId": "123"
                                            },
                                            {
                                                "abbreviation": "DRP2",
                                                "leadPerson": "Dr. Norman Borlaug",
                                                "name": "Wheat Improvement Program",
                                                "objective": "Yield improvement",
                                                "programDbId": "456"
                                            }
                                        ]
                                    }
                                }
                            },
                            "headers": [],
                            "schema": {
                                "$ref": "#/definitions/programsResponse"
                            }
                        }
                    }
                }
            },
            "data_types": []
        },
        "/samples": {
            "definition": {
                "put": {
                    "tags": [
                        "Samples"
                    ],
                    "summary": "Add a sample",
                    "description": "Call to register the event of a sample being taken. Sample ID is assigned as a result of the operation and returned in response.\n",
                    "parameters": [
                        {
                            "in": "body",
                            "name": "sample",
                            "required": false,
                            "schema": {
                                "$ref": "#/definitions/sample"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "examples": {
                                "application/json": {
                                    "result": {
                                        "sampleDbId": "Unique-Plant-SampleID"
                                    }
                                }
                            },
                            "headers": [],
                            "schema": {
                                "$ref": "#/definitions/newSampleDbId"
                            }
                        }
                    }
                }
            },
            "data_types": []
        },
        "/samples-search": {
            "definition": {
                "get": {
                    "tags": [
                        "Samples",
                        "Search Services"
                    ],
                    "summary": "Get Sample Search",
                    "description": " Used to retrieve list of Samples from a Sample Tracking system based on some search criteria.\n<a href=\"https://test-server.brapi.org/brapi/v1/samples\"> test-server.brapi.org/brapi/v1/samples-search</a>",
                    "produces": [
                        "application/json"
                    ],
                    "parameters": [
                        {
                            "name": "sampleDbId",
                            "in": "query",
                            "description": "the internal DB id for a sample",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "name": "observationUnitDbId",
                            "in": "query",
                            "description": "the internal DB id for an observation unit where a sample was taken from",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "name": "plateDbId",
                            "in": "query",
                            "description": "the internal DB id for a plate of samples",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "name": "germplasmDbId",
                            "in": "query",
                            "description": "the internal DB id for a germplasm",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is 1000.",
                            "required": false,
                            "type": "integer"
                        },
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is 0.",
                            "required": false,
                            "type": "integer"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "examples": {
                                "application/json": {
                                    "metadata": {
                                        "datafiles": [],
                                        "pagination": {
                                            "currentPage": 0,
                                            "pageSize": 1000,
                                            "totalCount": 2,
                                            "totalPages": 1
                                        },
                                        "status": []
                                    },
                                    "result": {
                                        "data": [
                                            {
                                                "germplasmDbId": "def456",
                                                "notes": "Cut from infected leaf",
                                                "observationUnitDbId": "abc123",
                                                "plantDbId": "PlantID-123",
                                                "plateDbId": "PlateID-123",
                                                "plateIndex": 0,
                                                "plotDbId": "PlotId-123",
                                                "sampleDbId": "Unique-Plant-SampleID-1",
                                                "sampleTimestamp": "2016-07-27T13:43:22.000+0000",
                                                "sampleType": "TypeOfSample",
                                                "studyDbId": "StudyId-123",
                                                "takenBy": "Mr. Technician",
                                                "tissueType": "TypeOfTissue"
                                            },
                                            {
                                                "germplasmDbId": "def456",
                                                "notes": "Cut from infected leaf",
                                                "observationUnitDbId": "a1b2c3",
                                                "plantDbId": "PlantID-123",
                                                "plateDbId": "PlateID-123",
                                                "plateIndex": 0,
                                                "plotDbId": "PlotId-123",
                                                "sampleDbId": "Unique-Plant-SampleID-2",
                                                "sampleTimestamp": "2016-07-27T13:43:22.000+0000",
                                                "sampleType": "TypeOfSample",
                                                "studyDbId": "StudyId-123",
                                                "takenBy": "Mr. Technician",
                                                "tissueType": "TypeOfTissue"
                                            }
                                        ]
                                    }
                                }
                            },
                            "headers": [],
                            "schema": {
                                "$ref": "#/definitions/samplesResponse"
                            }
                        }
                    }
                },
                "post": {
                    "tags": [
                        "Samples",
                        "Search Services"
                    ],
                    "summary": "Post Sample Search",
                    "description": " Used to retrieve list of Samples from a Sample Tracking system based on some search criteria.\n<a href=\"https://test-server.brapi.org/brapi/v1/samples\"> test-server.brapi.org/brapi/v1/samples-search</a>",
                    "produces": [
                        "application/json"
                    ],
                    "parameters": [
                        {
                            "in": "body",
                            "name": "sampleSearch",
                            "required": false,
                            "schema": {
                                "$ref": "#/definitions/sampleSearchRequest"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "examples": {
                                "application/json": {
                                    "metadata": {
                                        "datafiles": [],
                                        "pagination": {
                                            "currentPage": 0,
                                            "pageSize": 1000,
                                            "totalCount": 2,
                                            "totalPages": 1
                                        },
                                        "status": []
                                    },
                                    "result": {
                                        "data": [
                                            {
                                                "germplasmDbId": "def456",
                                                "notes": "Cut from infected leaf",
                                                "observationUnitDbId": "abc123",
                                                "plantDbId": "PlantID-123",
                                                "plateDbId": "PlateID-123",
                                                "plateIndex": 0,
                                                "plotDbId": "PlotId-123",
                                                "sampleDbId": "Unique-Plant-SampleID-1",
                                                "sampleTimestamp": "2016-07-27T13:43:22.000+0000",
                                                "sampleType": "TypeOfSample",
                                                "studyDbId": "StudyId-123",
                                                "takenBy": "Mr. Technician",
                                                "tissueType": "TypeOfTissue"
                                            },
                                            {
                                                "germplasmDbId": "def456",
                                                "notes": "Cut from infected leaf",
                                                "observationUnitDbId": "a1b2c3",
                                                "plantDbId": "PlantID-123",
                                                "plateDbId": "PlateID-123",
                                                "plateIndex": 0,
                                                "plotDbId": "PlotId-123",
                                                "sampleDbId": "Unique-Plant-SampleID-2",
                                                "sampleTimestamp": "2016-07-27T13:43:22.000+0000",
                                                "sampleType": "TypeOfSample",
                                                "studyDbId": "StudyId-123",
                                                "takenBy": "Mr. Technician",
                                                "tissueType": "TypeOfTissue"
                                            }
                                        ]
                                    }
                                }
                            },
                            "headers": [],
                            "schema": {
                                "$ref": "#/definitions/samplesResponse"
                            }
                        }
                    }
                }
            },
            "data_types": []
        },
        "/samples/{sampleDbId}": {
            "definition": {
                "get": {
                    "tags": [
                        "Samples"
                    ],
                    "summary": "Get Sample",
                    "description": " Used to retrieve the details of a single Sample from a Sample Tracking system.\n<a href=\"https://test-server.brapi.org/brapi/v1/samples\"> test-server.brapi.org/brapi/v1/samples/{sampleDbId}</a>",
                    "parameters": [
                        {
                            "name": "sampleDbId",
                            "in": "path",
                            "description": "the internal DB id for a sample",
                            "required": true,
                            "type": "string"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "examples": {
                                "application/json": {
                                    "metadata": {
                                        "datafiles": [],
                                        "pagination": {
                                            "currentPage": 0,
                                            "pageSize": 0,
                                            "totalCount": 0,
                                            "totalPages": 0
                                        },
                                        "status": []
                                    },
                                    "result": {
                                        "germplasmDbId": "def456",
                                        "notes": "Cut from infected leaf",
                                        "observationUnitDbId": "abc123",
                                        "plantDbId": "PlantID-123",
                                        "plateDbId": "PlateID-123",
                                        "plateIndex": 0,
                                        "plotDbId": "PlotId-123",
                                        "sampleDbId": "Unique-Plant-SampleID-1",
                                        "sampleTimestamp": "2016-07-27T14:43:22+01:00",
                                        "sampleType": "TypeOfSample",
                                        "studyDbId": "StudyId-123",
                                        "takenBy": "Mr. Technician",
                                        "tissueType": "TypeOfTissue"
                                    }
                                }
                            },
                            "headers": [],
                            "schema": {
                                "$ref": "#/definitions/sampleResponse"
                            }
                        }
                    }
                }
            },
            "data_types": []
        },
        "/seasons": {
            "definition": {
                "get": {
                    "tags": [
                        "Studies"
                    ],
                    "summary": "List seasons or years",
                    "description": " Call to retrive all seasons (or years) in the database. (Added by Jan-Erik and Lukas 5/26/2016) Scope: PHENOTYPING.\n<a href=\"https://test-server.brapi.org/brapi/v1/seasons\"> test-server.brapi.org/brapi/v1/seasons</a>",
                    "produces": [
                        "application/json"
                    ],
                    "parameters": [
                        {
                            "name": "year",
                            "in": "query",
                            "description": "",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "type": "integer"
                        },
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "type": "integer"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "examples": {
                                "application/json": {
                                    "metadata": {
                                        "datafiles": [],
                                        "pagination": {
                                            "currentPage": 0,
                                            "pageSize": 1000,
                                            "totalCount": 2,
                                            "totalPages": 1
                                        },
                                        "status": []
                                    },
                                    "result": {
                                        "data": [
                                            {
                                                "season": "Fall",
                                                "seasonDbId": "237",
                                                "year": "2015"
                                            },
                                            {
                                                "season": "Spring",
                                                "seasonDbId": "238",
                                                "year": "2016"
                                            }
                                        ]
                                    }
                                }
                            },
                            "headers": [],
                            "schema": {
                                "$ref": "#/definitions/seasonsResponse"
                            }
                        }
                    }
                }
            },
            "data_types": []
        },
        "/studies-search": {
            "definition": {
                "get": {
                    "tags": [
                        "Studies",
                        "Search Services"
                    ],
                    "summary": "Search Studies (GET)",
                    "description": " Scope: PHENOTYPING. Status: ACCEPTED. Implementation target date: PAG2016.\nImplemented by: Germinate\nUsed by: Flapjack, Cassavabase\nSee <a href=\"#introduction/search-services\">Search Services</a> for additional implementation details.\nGet list of studies\nStartDate and endDate should be ISO8601 format for dates: YYYY-MM-DD\n<a href=\"https://test-server.brapi.org/brapi/v1/studies\"> test-server.brapi.org/brapi/v1/studies-search</a>",
                    "produces": [
                        "application/json"
                    ],
                    "parameters": [
                        {
                            "name": "studyType",
                            "in": "query",
                            "description": "Filter based on study type e.g. Nursery, Trial or Genotype.",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "name": "programDbId",
                            "in": "query",
                            "description": "Program filter to only return studies associated with given program id.",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "name": "locationDbId",
                            "in": "query",
                            "description": "Filter by location",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "name": "seasonDbId",
                            "in": "query",
                            "description": "Filter by season or year",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "name": "trialDbId",
                            "in": "query",
                            "description": "Filter by trial",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "name": "studyDbId",
                            "in": "query",
                            "description": "Filter by study DbId",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "name": "germplasmDbIds",
                            "in": "query",
                            "description": "Filter studies where specified germplasm have been used/tested",
                            "required": false,
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "collectionFormat": "multi"
                        },
                        {
                            "name": "observationVariableDbIds",
                            "in": "query",
                            "description": "Filter studies where specified observation variables have been measured",
                            "required": false,
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "collectionFormat": "multi"
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "type": "integer"
                        },
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "type": "integer"
                        },
                        {
                            "name": "active",
                            "in": "query",
                            "description": "Filter active status true/false.",
                            "required": false,
                            "type": "boolean"
                        },
                        {
                            "name": "sortBy",
                            "in": "query",
                            "description": "Sort order. Name of the field to sort by.",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "name": "sortOrder",
                            "in": "query",
                            "description": "Sort order direction. Ascending/Descending.",
                            "required": false,
                            "type": "string"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "examples": {
                                "application/json": {
                                    "metadata": {
                                        "datafiles": [],
                                        "pagination": {
                                            "currentPage": 0,
                                            "pageSize": 1000,
                                            "totalCount": 2,
                                            "totalPages": 1
                                        },
                                        "status": []
                                    },
                                    "result": {
                                        "data": [
                                            {
                                                "active": "true",
                                                "additionalInfo": {
                                                    "property1Name": "property1Value",
                                                    "property2Name": "property2Value",
                                                    "property3Name": "property3Value"
                                                },
                                                "endDate": "2008-12-31",
                                                "locationDbId": "23",
                                                "locationName": "Kenya",
                                                "name": "Earlygenerationtesting",
                                                "programDbId": "27",
                                                "programName": "Drought Resistance Program A",
                                                "seasons": [
                                                    "2007 Spring",
                                                    "2008 Fall"
                                                ],
                                                "startDate": "2007-06-01",
                                                "studyDbId": "35",
                                                "studyType": "Trial",
                                                "trialDbId": "7",
                                                "trialName": "InternationalTrialA"
                                            },
                                            {
                                                "active": "true",
                                                "additionalInfo": {
                                                    "property1Name": "property1Value",
                                                    "property2Name": "property2Value",
                                                    "property3Name": "property3Value"
                                                },
                                                "endDate": "2008-12-31",
                                                "locationDbId": "33",
                                                "locationName": "Zimbabwe",
                                                "name": "Earlygenerationtesting",
                                                "programDbId": "58",
                                                "programName": "Drought Resistance Program B",
                                                "seasons": [
                                                    "2007 Spring",
                                                    "2008 Fall"
                                                ],
                                                "startDate": "2005-06-01",
                                                "studyDbId": "345",
                                                "studyType": "Trial",
                                                "trialDbId": "7",
                                                "trialName": "InternationalTrialA"
                                            }
                                        ]
                                    }
                                }
                            },
                            "headers": [],
                            "schema": {
                                "$ref": "#/definitions/studiesResponse"
                            }
                        }
                    }
                },
                "post": {
                    "tags": [
                        "Studies",
                        "Search Services"
                    ],
                    "summary": "Search Studies (GET)",
                    "description": " Scope: PHENOTYPING. Status: ACCEPTED. Implementation target date: PAG2016.\nImplemented by: Germinate\nUsed by: Flapjack, Cassavabase\nSee <a href=\"#introduction/search-services\">Search Services</a> for additional implementation details.\nGet list of studies\nStartDate and endDate should be ISO8601 format for dates: YYYY-MM-DD\n<a href=\"https://test-server.brapi.org/brapi/v1/studies\"> test-server.brapi.org/brapi/v1/studies-search</a>",
                    "produces": [
                        "application/json"
                    ],
                    "parameters": [
                        {
                            "in": "body",
                            "name": "studySearchRequest",
                            "description": "Study Search request",
                            "required": false,
                            "schema": {
                                "$ref": "#/definitions/studySearchRequest"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "examples": {
                                "application/json": {
                                    "metadata": {
                                        "datafiles": [],
                                        "pagination": {
                                            "currentPage": 0,
                                            "pageSize": 1000,
                                            "totalCount": 2,
                                            "totalPages": 1
                                        },
                                        "status": []
                                    },
                                    "result": {
                                        "data": [
                                            {
                                                "active": "true",
                                                "additionalInfo": {
                                                    "property1Name": "property1Value",
                                                    "property2Name": "property2Value",
                                                    "property3Name": "property3Value"
                                                },
                                                "endDate": "2008-12-31",
                                                "locationDbId": "23",
                                                "locationName": "Kenya",
                                                "name": "Earlygenerationtesting",
                                                "programDbId": "27",
                                                "programName": "Drought Resistance Program A",
                                                "seasons": [
                                                    "2007 Spring",
                                                    "2008 Fall"
                                                ],
                                                "startDate": "2007-06-01",
                                                "studyDbId": "35",
                                                "studyType": "Trial",
                                                "trialDbId": "7",
                                                "trialName": "InternationalTrialA"
                                            },
                                            {
                                                "active": "true",
                                                "additionalInfo": {
                                                    "property1Name": "property1Value",
                                                    "property2Name": "property2Value",
                                                    "property3Name": "property3Value"
                                                },
                                                "endDate": "2008-12-31",
                                                "locationDbId": "33",
                                                "locationName": "Zimbabwe",
                                                "name": "Earlygenerationtesting",
                                                "programDbId": "58",
                                                "programName": "Drought Resistance Program B",
                                                "seasons": [
                                                    "2007 Spring",
                                                    "2008 Fall"
                                                ],
                                                "startDate": "2005-06-01",
                                                "studyDbId": "345",
                                                "studyType": "Trial",
                                                "trialDbId": "7",
                                                "trialName": "InternationalTrialA"
                                            }
                                        ]
                                    }
                                }
                            },
                            "headers": [],
                            "schema": {
                                "$ref": "#/definitions/studiesResponse"
                            }
                        }
                    }
                }
            },
            "data_types": []
        },
        "/studies/{studyDbId}": {
            "definition": {
                "get": {
                    "tags": [
                        "Studies"
                    ],
                    "summary": "Retrieve study details",
                    "description": " Scope: PHENOTYPING. Status: ACCEPTED. Implemented by: Germinate, GnpIS\nNotes: an additionalInfo field was added to provide a controlled vocabulary for less common data fields.\nRetrieve the information of the study required for field data collection\nMore linked data: * observation variables: ```/brapi/v1/studies/{studyDbId}/observationVariables``` * germplasm: ```/brapi/v1/studies/{studyDbId}/germplasm``` * observation units: ```/brapi/v1/studies/{studyDbId}/observationUnits``` * layout: ```brapi/v1/studies/{studyDbId}/layout```\n<a href=\"https://test-server.brapi.org/brapi/v1/studies\"> test-server.brapi.org/brapi/v1/studies/{studyDbId}</a>",
                    "parameters": [
                        {
                            "name": "studyDbId",
                            "in": "path",
                            "description": "Identifier of the study. Usually a number, could be alphanumeric.",
                            "required": true,
                            "type": "string"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "examples": {
                                "application/json": {
                                    "metadata": {
                                        "datafiles": [],
                                        "pagination": {
                                            "currentPage": 0,
                                            "pageSize": 0,
                                            "totalCount": 0,
                                            "totalPages": 0
                                        },
                                        "status": []
                                    },
                                    "result": {
                                        "active": "true",
                                        "additionalInfo": {
                                            "principalInvestigator": "Dr. Breeder",
                                            "property1Name": "property1Value",
                                            "property2Name": "property2Value",
                                            "publications": "pmid:24039865287545",
                                            "studyObjective": "Increase yield"
                                        },
                                        "contacts": [
                                            {
                                                "contactDbId": "C025",
                                                "email": "j.doe@mail.com",
                                                "instituteName": "IRRI",
                                                "name": "John Doe",
                                                "orcid": "0000-0002-0607-8728",
                                                "type": "Scientist"
                                            },
                                            {
                                                "contactDbId": "C026",
                                                "instituteName": "IRRI",
                                                "name": "Dave Peters"
                                            }
                                        ],
                                        "dataLinks": [
                                            {
                                                "name": "image-archive12.zip",
                                                "type": "Image archive",
                                                "url": "http://data.inra.fr/archive/multi-spect-flowering.zip"
                                            }
                                        ],
                                        "endDate": "2008-12-31",
                                        "lastUpdate": {
                                            "timestamp": "2015-06-16T00:53:26Z",
                                            "version": "1.1"
                                        },
                                        "license": "https://creativecommons.org/licenses/by/4.0",
                                        "location": {
                                            "abbreviation": "IB",
                                            "additionalInfo": {
                                                "AnnualMeanRain": "value",
                                                "SoilDescription": "23",
                                                "property1Name": "property1Value",
                                                "property2Name": "property2Value"
                                            },
                                            "altitude": 12,
                                            "countryCode": "NGA",
                                            "countryName": "Nigeria",
                                            "instituteAddress": "route foo, Clermont Ferrand, France",
                                            "instituteName": "INRA - GDEC",
                                            "latitude": -21.5,
                                            "locationDbId": "1",
                                            "longitude": 165.5,
                                            "name": "Ibadan"
                                        },
                                        "seasons": [
                                            "2005 Winter",
                                            "2008 Summer"
                                        ],
                                        "startDate": "2005-06-01",
                                        "studyDbId": "35",
                                        "studyDescription": "some free text description that could include scientific goal, some tracability and whatever makes sense",
                                        "studyName": "Earlygenerationtesting",
                                        "studyType": "Yield study",
                                        "trialDbId": "57",
                                        "trialName": "International Yield Trial"
                                    }
                                }
                            },
                            "headers": [],
                            "schema": {
                                "$ref": "#/definitions/studyResponse"
                            }
                        }
                    }
                }
            },
            "data_types": []
        },
        "/studies/{studyDbId}/germplasm": {
            "definition": {
                "get": {
                    "tags": [
                        "Studies",
                        "Germplasm"
                    ],
                    "summary": "Study Germplasm Details",
                    "description": " Scope: PHENOTYPING\n<a href=\"https://test-server.brapi.org/brapi/v1/studies\"> test-server.brapi.org/brapi/v1/studies/{studyDbId}/germplasm</a>",
                    "parameters": [
                        {
                            "name": "studyDbId",
                            "in": "path",
                            "description": "Identifier of the study. Usually a number, could be alphanumeric.",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "type": "integer"
                        },
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "type": "integer"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "examples": {
                                "application/json": {
                                    "metadata": {
                                        "datafiles": [],
                                        "pagination": {
                                            "currentPage": 0,
                                            "pageSize": 1000,
                                            "totalCount": 2,
                                            "totalPages": 1
                                        },
                                        "status": []
                                    },
                                    "result": {
                                        "data": [
                                            {
                                                "accessionNumber": "ITC0609",
                                                "entryNumber": "1",
                                                "germplasmDbId": "382",
                                                "germplasmName": "Pahang",
                                                "germplasmPUI": "http://www.crop-diversity.org/mgis/accession/01BEL084609",
                                                "pedigree": "TOBA97/SW90.1057",
                                                "seedSource": "SS1",
                                                "synonyms": [
                                                    "01BEL084609"
                                                ]
                                            },
                                            {
                                                "accessionNumber": "ITC0727",
                                                "entryNumber": "2",
                                                "germplasmDbId": "394",
                                                "germplasmName": "Pahang",
                                                "germplasmPUI": "http://www.crop-diversity.org/mgis/accession/01BEL084727",
                                                "pedigree": "TOBA97/SW90.1057",
                                                "seedSource": "SS2",
                                                "synonyms": [
                                                    "01BEL084727"
                                                ]
                                            }
                                        ],
                                        "studyDbId": "35",
                                        "trialName": "myBestTrial"
                                    }
                                }
                            },
                            "headers": [],
                            "schema": {
                                "$ref": "#/definitions/germplasmSummaryListResponse"
                            }
                        }
                    }
                }
            },
            "data_types": []
        },
        "/studies/{studyDbId}/layout": {
            "definition": {
                "get": {
                    "tags": [
                        "Studies"
                    ],
                    "summary": "Retrieve plot layout details",
                    "description": " Retrive the layout details for a study. Returns an array of observation unit position data which describes where each unit and germplasm is located within the study layout\nRetrieve the plot layout of the study with id {id}.\nFor each observationUnit within a study, return the `block`, `replicate`, and `entryType` values as well as the `X` and `Y` coordinates. `entryType` can be \"check\", \"test\", or \"filler\".\nAlso return some human readable meta data about the observationUnit and germplasm.\n<a href=\"https://test-server.brapi.org/brapi/v1/studies\"> test-server.brapi.org/brapi/v1/studies/{studyDbId}/layout</a> ",
                    "produces": [
                        "application/json"
                    ],
                    "parameters": [
                        {
                            "name": "studyDbId",
                            "in": "path",
                            "description": "Identifier of the study. Usually a number, could be alphanumeric.",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "type": "integer"
                        },
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "type": "integer"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "examples": {
                                "application/json": {
                                    "metadata": {
                                        "datafiles": [],
                                        "pagination": {
                                            "currentPage": 0,
                                            "pageSize": 1000,
                                            "totalCount": 4,
                                            "totalPages": 1
                                        },
                                        "status": []
                                    },
                                    "result": {
                                        "data": [
                                            {
                                                "X": 1,
                                                "Y": 1,
                                                "additionalInfo": [],
                                                "blockNumber": 1,
                                                "entryType": "check/test/filler",
                                                "germplasmDbId": "143",
                                                "germplasmName": "ZIPA_68",
                                                "observationLevel": "plot",
                                                "observationUnitDbId": "11",
                                                "observationUnitName": "ZIPA_68_Ibadan_2014",
                                                "replicate": 1,
                                                "studyDbId": "35"
                                            },
                                            {
                                                "X": 1,
                                                "Y": 2,
                                                "additionalInfo": [],
                                                "blockNumber": 1,
                                                "entryType": "check/test/filler",
                                                "germplasmDbId": "144",
                                                "germplasmName": "ZIPA_69",
                                                "observationLevel": "plot",
                                                "observationUnitDbId": "12",
                                                "observationUnitName": "ZIPA_69_Ibadan_2014",
                                                "replicate": 1,
                                                "studyDbId": "35"
                                            },
                                            {
                                                "X": 1,
                                                "Y": 3,
                                                "additionalInfo": [],
                                                "blockNumber": 1,
                                                "entryType": "check/test/filler",
                                                "germplasmDbId": "145",
                                                "germplasmName": "ZIPA_70",
                                                "observationLevel": "plot",
                                                "observationUnitDbId": "13",
                                                "observationUnitName": "ZIPA_70_Ibadan_2014",
                                                "replicate": 1,
                                                "studyDbId": "35"
                                            },
                                            {
                                                "X": 2,
                                                "Y": 1,
                                                "additionalInfo": [],
                                                "blockNumber": 2,
                                                "entryType": "check/test/filler",
                                                "germplasmDbId": "143",
                                                "germplasmName": "ZIPA_68",
                                                "observationLevel": "plot",
                                                "observationUnitDbId": "11",
                                                "observationUnitName": "ZIPA_68_Ibadan_2014",
                                                "replicate": 2,
                                                "studyDbId": "35"
                                            }
                                        ]
                                    }
                                }
                            },
                            "headers": [],
                            "schema": {
                                "$ref": "#/definitions/observationUnitPositionsResponse"
                            }
                        }
                    }
                },
                "put": {
                    "tags": [
                        "Studies"
                    ],
                    "summary": "Retrieve plot layout details",
                    "description": " Modify a study layout\nUpdate the layout data for a set of observation units within a study. Each layout object is a subset of fields within an observationUnit, so it doesnt make sense to create a new layout object by itself.\nImplementation Notes:\n+ If any of the fields in the request object is missing, that piece of data will not be updated. + If an observationUnitDbId can not be found within the given study, an error will be returned. + `entryType` can have the values \"check\", \"test\", or \"filler\". + The response should match the structure of the response from `GET studies/{studyDbId}/layout`, but it should only contain the layout objects which have been updated by the PUT request. Also, pagination is not available in the response.\n<a href=\"https://test-server.brapi.org/brapi/v1/studies\"> test-server.brapi.org/brapi/v1/studies/{studyDbId}/layout</a> ",
                    "produces": [
                        "application/json"
                    ],
                    "parameters": [
                        {
                            "name": "studyDbId",
                            "in": "path",
                            "description": "Identifier of the study. Usually a number, could be alphanumeric.",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "in": "body",
                            "name": "studyLayoutRequest",
                            "description": "The request body for updateing a study layout",
                            "required": false,
                            "schema": {
                                "$ref": "#/definitions/studyLayoutRequest"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "examples": {
                                "application/json": {
                                    "metadata": {
                                        "datafiles": [],
                                        "pagination": {
                                            "currentPage": 0,
                                            "pageSize": 1000,
                                            "totalCount": 4,
                                            "totalPages": 1
                                        },
                                        "status": []
                                    },
                                    "result": {
                                        "data": [
                                            {
                                                "X": 1,
                                                "Y": 1,
                                                "additionalInfo": [],
                                                "blockNumber": 1,
                                                "entryType": "check/test/filler",
                                                "germplasmDbId": "143",
                                                "germplasmName": "ZIPA_68",
                                                "observationLevel": "plot",
                                                "observationUnitDbId": "11",
                                                "observationUnitName": "ZIPA_68_Ibadan_2014",
                                                "replicate": 1,
                                                "studyDbId": "1"
                                            },
                                            {
                                                "X": 1,
                                                "Y": 2,
                                                "additionalInfo": [],
                                                "blockNumber": 1,
                                                "entryType": "check/test/filler",
                                                "germplasmDbId": "144",
                                                "germplasmName": "ZIPA_69",
                                                "observationLevel": "plot",
                                                "observationUnitDbId": "12",
                                                "observationUnitName": "ZIPA_69_Ibadan_2014",
                                                "replicate": 1,
                                                "studyDbId": "1"
                                            },
                                            {
                                                "X": 1,
                                                "Y": 3,
                                                "additionalInfo": [],
                                                "blockNumber": 1,
                                                "entryType": "check/test/filler",
                                                "germplasmDbId": "145",
                                                "germplasmName": "ZIPA_70",
                                                "observationLevel": "plot",
                                                "observationUnitDbId": "13",
                                                "observationUnitName": "ZIPA_70_Ibadan_2014",
                                                "replicate": 1,
                                                "studyDbId": "1"
                                            },
                                            {
                                                "X": 2,
                                                "Y": 1,
                                                "additionalInfo": [],
                                                "blockNumber": 2,
                                                "entryType": "check/test/filler",
                                                "germplasmDbId": "143",
                                                "germplasmName": "ZIPA_68",
                                                "observationLevel": "plot",
                                                "observationUnitDbId": "11",
                                                "observationUnitName": "ZIPA_68_Ibadan_2014",
                                                "replicate": 2,
                                                "studyDbId": "1"
                                            }
                                        ]
                                    }
                                }
                            },
                            "headers": [],
                            "schema": {
                                "$ref": "#/definitions/observationUnitPositionsResponse"
                            }
                        }
                    }
                }
            },
            "data_types": []
        },
        "/studies/{studyDbId}/observationVariables": {
            "definition": {
                "get": {
                    "tags": [
                        "Studies",
                        "Observation Variables",
                        "Deprecated"
                    ],
                    "summary": "<strong>Deprecated</strong> Retrieve study observation variables",
                    "description": "\n\n<a href=\"https://test-server.brapi.org/brapi/v1/studies\"> test-server.brapi.org/brapi/v1/studies/{studyDbId}/observationVariables</a>",
                    "produces": [
                        "application/json"
                    ],
                    "parameters": [
                        {
                            "name": "studyDbId",
                            "in": "path",
                            "description": "string database unique identifier",
                            "required": true,
                            "type": "string"
                        }
                    ],
                    "deprecated": true,
                    "responses": {
                        "200": {
                            "description": "OK",
                            "examples": {
                                "application/json": {
                                    "metadata": {
                                        "datafiles": [],
                                        "pagination": {
                                            "currentPage": 0,
                                            "pageSize": 0,
                                            "totalCount": 0,
                                            "totalPages": 0
                                        },
                                        "status": []
                                    },
                                    "result": {
                                        "data": [
                                            {
                                                "name": "CT_M_C",
                                                "observationVariableDbId": "CO_334:0100632",
                                                "ontologyDbId": "CO_334",
                                                "ontologyName": "Cassava",
                                                "trait": {
                                                    "name": "Canopy temperature",
                                                    "traitDbId": "CO_334:0100630"
                                                }
                                            },
                                            {
                                                "contextOfUse": [
                                                    "Trial evaluation",
                                                    "Nursery evaluation"
                                                ],
                                                "crop": "Cassava",
                                                "date": "2016-05-13",
                                                "growthStage": "mature",
                                                "institution": "",
                                                "language": "EN",
                                                "method": {
                                                    "class": "Estimation",
                                                    "description": "Assessment of the level of yellowness in cassava storage root pulp using the tc chart",
                                                    "methodDbId": "CO_334:0010320",
                                                    "name": "Visual Rating:total carotenoid by chart_method"
                                                },
                                                "name": "caro_spectro",
                                                "observationVariableDbId": "CO_334:0100622",
                                                "ontologyDbId": "CO_334",
                                                "ontologyName": "Cassava",
                                                "scale": {
                                                    "datatype": "Numeric",
                                                    "decimalPlaces": 2,
                                                    "name": "ug/g",
                                                    "scaleDbId": "CO_334:0100526",
                                                    "validValues": {
                                                        "categories": [
                                                            "1=low",
                                                            "2=medium",
                                                            "3=high"
                                                        ],
                                                        "max": 3,
                                                        "min": 1
                                                    }
                                                },
                                                "scientist": "",
                                                "status": "recommended",
                                                "synonyms": [
                                                    "Carotenoid content by spectro"
                                                ],
                                                "trait": {
                                                    "alternativeAbbreviations": [
                                                        "CCS"
                                                    ],
                                                    "attribute": "carotenoid",
                                                    "class": "physiological trait",
                                                    "description": "Cassava storage root pulp carotenoid content",
                                                    "entity": "root",
                                                    "mainAbbreviation": "CC",
                                                    "name": "Carotenoid content",
                                                    "status": "recommended",
                                                    "synonyms": [
                                                        "carotenoid content measure"
                                                    ],
                                                    "traitDbId": "CO_334:0100620",
                                                    "xref": "TL_455:0003023"
                                                },
                                                "xref": "TL_455:0003001"
                                            }
                                        ],
                                        "studyDbId": "123",
                                        "trialName": "myBestTrial"
                                    }
                                }
                            },
                            "headers": [],
                            "schema": {
                                "$ref": "#/definitions/studyObservationVariablesResponse"
                            }
                        }
                    }
                }
            },
            "data_types": []
        },
        "/studies/{studyDbId}/observations": {
            "definition": {
                "get": {
                    "tags": [
                        "Studies",
                        "Observations"
                    ],
                    "summary": "Get Observation Units by observation variable ids",
                    "description": "\nRetrieve all observations where there are measurements for the given observation variables.\nobservationTimestamp should be ISO8601 format with timezone: YYYY-MM-DDThh:mm:ss+hhmm\n<a href=\"https://test-server.brapi.org/brapi/v1/studies\"> test-server.brapi.org/brapi/v1/studies/{studyDbId}/observations</a>",
                    "parameters": [
                        {
                            "name": "studyDbId",
                            "in": "path",
                            "description": "Identifier of the study. Usually a number, could be alphanumeric.",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "name": "observationVariableDbIds",
                            "in": "query",
                            "description": "Numeric `id` of that variable (combination of trait, unit and method)",
                            "required": false,
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "collectionFormat": "multi"
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "type": "integer"
                        },
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "type": "integer"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "examples": {
                                "application/json": {
                                    "metadata": {
                                        "datafiles": [],
                                        "pagination": {
                                            "currentPage": 0,
                                            "pageSize": 1000,
                                            "totalCount": 2,
                                            "totalPages": 1
                                        },
                                        "status": []
                                    },
                                    "result": {
                                        "data": [
                                            {
                                                "germplasmDbId": "8383",
                                                "germplasmName": "Pahang",
                                                "observationDbId": "12345",
                                                "observationLevel": "plot",
                                                "observationTimeStamp": "2015-11-05T15:12:56+01:00",
                                                "observationUnitDbId": "11",
                                                "observationUnitName": "ZIPA_68_Ibadan_2014",
                                                "observationVariableDbId": "CO_334:0100632",
                                                "observationVariableName": "Yield",
                                                "operator": "Jane Doe",
                                                "studyDbId": "35",
                                                "uploadedBy": "dbUserId",
                                                "value": "5"
                                            },
                                            {
                                                "germplasmDbId": "8383",
                                                "germplasmName": "Pahang",
                                                "observationDbId": "23456",
                                                "observationLevel": "plot",
                                                "observationTimeStamp": "2015-11-05T15:13:56+01:00",
                                                "observationUnitDbId": "11",
                                                "observationUnitName": "ZIPA_68_Ibadan_2014",
                                                "observationVariableDbId": "CO_334:0100632",
                                                "observationVariableName": "Dry Weight",
                                                "operator": "Jane Doe",
                                                "studyDbId": "35",
                                                "uploadedBy": "dbUserId",
                                                "value": "22.3"
                                            }
                                        ]
                                    }
                                }
                            },
                            "headers": [],
                            "schema": {
                                "$ref": "#/definitions/observationsResponse"
                            }
                        }
                    }
                },
                "put": {
                    "tags": [
                        "Studies",
                        "Observations"
                    ],
                    "summary": "Get Observation Units by observation variable ids",
                    "description": " Implementation Guidelines: + If an `observationDbId` is \"null\" or an empty string in the request, a NEW observation should be created for the given study and observationUnit + If an `observationDbId` is populated but not found in the database, a NEW observation should be created for the given study and observationUnit AND an NEW `observationDbId` should be assigned to it. A warning should be returned to the client. + If an `observationDbId` is populated and found in the database, but the existing entry is not associated with the given study or observationUnit, a NEW observation should be created for the given study and observationUnit AND an NEW `observationDbId` should be assigned to it. A warning should be returned to the client. + If an `observationDbId` is populated and found in the database and is associated with the given study and observationUnit, then it should be updated with the new data given.\n<a href=\"https://test-server.brapi.org/brapi/v1/studies\"> test-server.brapi.org/brapi/v1/studies/{studyDbId}/observations</a>",
                    "parameters": [
                        {
                            "name": "studyDbId",
                            "in": "path",
                            "description": "Identifier of the study. Usually a number, could be alphanumeric.",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "in": "body",
                            "name": "newObservations",
                            "required": false,
                            "schema": {
                                "$ref": "#/definitions/newObservationsRequest"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "examples": {
                                "application/json": {
                                    "metadata": {
                                        "datafiles": [],
                                        "pagination": {
                                            "currentPage": 0,
                                            "pageSize": 1000,
                                            "totalCount": 2,
                                            "totalPages": 1
                                        },
                                        "status": []
                                    },
                                    "result": {
                                        "data": [
                                            {
                                                "germplasmDbId": "8383",
                                                "germplasmName": "Pahang",
                                                "observationDbId": "12345",
                                                "observationLevel": "plot",
                                                "observationTimestamp": "2015-11-05T15:12:56+01:00",
                                                "observationUnitDbId": "11",
                                                "observationUnitName": "ZIPA_68_Ibadan_2014",
                                                "observationVariableDbId": "CO_334:0100632",
                                                "observationVariableName": "Yield",
                                                "operator": "Jane Doe",
                                                "studyDbId": "35",
                                                "uploadedBy": "dbUserId",
                                                "value": "5"
                                            },
                                            {
                                                "germplasmDbId": "8383",
                                                "germplasmName": "Pahang",
                                                "observationDbId": "23456",
                                                "observationLevel": "plot",
                                                "observationTimestamp": "2015-11-05T15:13:56+01:00",
                                                "observationUnitDbId": "11",
                                                "observationUnitName": "ZIPA_68_Ibadan_2014",
                                                "observationVariableDbId": "CO_334:0100632",
                                                "observationVariableName": "Dry Weight",
                                                "operator": "Jane Doe",
                                                "studyDbId": "35",
                                                "uploadedBy": "dbUserId",
                                                "value": "22.3"
                                            }
                                        ]
                                    }
                                }
                            },
                            "headers": [],
                            "schema": {
                                "$ref": "#/definitions/newObservationDbIdsResponse"
                            }
                        }
                    }
                }
            },
            "data_types": []
        },
        "/studies/{studyDbId}/observationunits": {
            "definition": {
                "get": {
                    "tags": [
                        "Studies",
                        "Observations"
                    ],
                    "summary": "Get all observation units",
                    "description": " The main API call for field data collection, to retrieve all the observation units within a study.\nScope: PHENOTYPING\n<a href=\"https://test-server.brapi.org/brapi/v1/studies\"> test-server.brapi.org/brapi/v1/studies/{studyDbId}/observationunits</a>",
                    "produces": [
                        "application/json"
                    ],
                    "parameters": [
                        {
                            "name": "studyDbId",
                            "in": "path",
                            "description": "The study these observation units are related to.",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "name": "observationLevel",
                            "in": "query",
                            "description": "The granularity level of observation units. Either `plotNumber` or `plantNumber` fields will be relavant depending on whether granularity is plot or plant respectively.",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "type": "integer"
                        },
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "type": "integer"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "examples": {
                                "application/json": {
                                    "metadata": {
                                        "datafiles": [],
                                        "pagination": {
                                            "currentPage": 0,
                                            "pageSize": 1000,
                                            "totalCount": 2,
                                            "totalPages": 1
                                        },
                                        "status": []
                                    },
                                    "result": {
                                        "data": [
                                            {
                                                "X": "1",
                                                "Y": "1",
                                                "blockNumber": "1",
                                                "entryNumber": "1",
                                                "entryType": "Test entry",
                                                "germplasmDbId": "1",
                                                "germplasmName": "IR-8",
                                                "observationLevel": "plot",
                                                "observationUnitDbId": "abc-123",
                                                "observationUnitName": "Test-2016-location-34-575",
                                                "observationUnitXref": [
                                                    {
                                                        "id": "SAMEA179865230",
                                                        "source": "biosampleEBI"
                                                    },
                                                    {
                                                        "id": "INRA:CoeSt6 _SMH03",
                                                        "source": "gnpis.lot"
                                                    },
                                                    {
                                                        "id": "239865",
                                                        "source": "kernelDB"
                                                    }
                                                ],
                                                "observations": [
                                                    {
                                                        "collector": "Mr. Technician",
                                                        "observationDbId": "153453453",
                                                        "observationTimeStamp": "2015-06-16T00:53:26Z",
                                                        "observationVariableDbId": "18020",
                                                        "observationVariableName": "Plant_height",
                                                        "value": "25.63"
                                                    },
                                                    {
                                                        "collector": "Mr. Technician",
                                                        "observationDbId": "23453454345",
                                                        "observationTimeStamp": "2015-06-16T00:53:26Z",
                                                        "observationVariableDbId": "51496",
                                                        "observationVariableName": "GW100_g",
                                                        "value": "Light Green"
                                                    }
                                                ],
                                                "pedigree": "IR-8-FP/IR-8-MP",
                                                "plantNumber": "0",
                                                "plotNumber": "1",
                                                "replicate": "1"
                                            },
                                            {
                                                "X": "1",
                                                "Y": "2",
                                                "blockNumber": "2",
                                                "enrtyNumber": "2",
                                                "entryType": "Check entry",
                                                "germplasmDbId": "2",
                                                "germplasmName": "IR-9",
                                                "observatioUnitDbId": "abc-456",
                                                "observationLevel": "plot",
                                                "observationUnitName": "Test-2016-location-34-456",
                                                "observations": [
                                                    {
                                                        "collector": "Mr. Technician",
                                                        "observationDbId": "3",
                                                        "observationTimeStamp": "2015-06-16T00:53:26Z",
                                                        "observationVariableDbId": "18020",
                                                        "observationVariableName": "Plant_height",
                                                        "value": "34.95"
                                                    },
                                                    {
                                                        "collector": "Mr. Technician",
                                                        "observationDbId": "4",
                                                        "observationTimeStamp": "2015-06-16T00:53:26Z",
                                                        "observationVariableDbId": "51496",
                                                        "observationVariableName": "GW100_g",
                                                        "value": "Blue"
                                                    }
                                                ],
                                                "pedigree": "IR-9-FP/IR-9-MP",
                                                "plantNumber": "0",
                                                "plotNumber": "2",
                                                "replicate": "1"
                                            }
                                        ]
                                    }
                                }
                            },
                            "headers": [],
                            "schema": {
                                "$ref": "#/definitions/observationUnitsResponse_1"
                            }
                        }
                    }
                },
                "post": {
                    "tags": [
                        "Studies",
                        "Observations",
                        "Deprecated"
                    ],
                    "summary": "<strong>Deprecated</strong> Save Observation Unit Phenotypes",
                    "description": "This call has been deprecated in V1.1. Use instead: \"PUT /studies/{studyDbId}/observationunits\" and \"PUT /studies/{studyDbId}/observationunits/zip\"",
                    "produces": [
                        "application/json"
                    ],
                    "parameters": [
                        {
                            "name": "studyDbId",
                            "in": "path",
                            "description": "The study these observation units are related to.",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "name": "format",
                            "in": "query",
                            "description": "(default is JSON, but can be zip) In case where JSON data is zipped for faster transfer speed (as in the case of the IRRI handheld implementation), the zipped JSON file will be listed in datafiles. The zipped file contains a JSON file with the same structure as the BrAPI call.",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "in": "body",
                            "name": "body",
                            "required": false,
                            "schema": {
                                "$ref": "#/definitions/newObservationsRequestWrapperDeprecated"
                            }
                        }
                    ],
                    "deprecated": true,
                    "responses": {
                        "200": {
                            "description": "OK",
                            "examples": [],
                            "headers": []
                        },
                        "400": {
                            "description": "Bad Request",
                            "examples": {
                                "application/json": {
                                    "metadata": {
                                        "status": [
                                            {
                                                "code": "42",
                                                "message": "Could not update values for Observation Units"
                                            }
                                        ]
                                    }
                                }
                            },
                            "headers": []
                        }
                    }
                },
                "put": {
                    "tags": [
                        "Studies",
                        "Observations"
                    ],
                    "summary": "Save Observation Unit Phenotypes",
                    "description": "Use this call for uploading new Observations as JSON to a system.\n\nNote: If 'observationUnitDbId' or 'observationDbId' is populated, they should be considered updates to existing records. If an existing record of that DbId is not found, the document should be treated as new records and assigned new DbIds. If 'observationUnitDbId' or 'observationDbId' is un-populated (empty string or null) the document should be treated as new records and assigned new DbIds.",
                    "produces": [
                        "application/json"
                    ],
                    "parameters": [
                        {
                            "name": "studyDbId",
                            "in": "path",
                            "description": "The study these observation units are related to.",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "in": "body",
                            "name": "newObservationUnitRequest",
                            "required": false,
                            "schema": {
                                "title": "newObservationUnitRequestList",
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/newObservationUnitRequest"
                                }
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "examples": {
                                "application/json": {
                                    "metadata": {
                                        "status": [
                                            {
                                                "code": "1",
                                                "message": "Upload Successful"
                                            }
                                        ]
                                    },
                                    "results": {
                                        "observationUnitDbIds": [
                                            "123abc",
                                            "456def"
                                        ]
                                    }
                                }
                            },
                            "headers": [],
                            "schema": {
                                "$ref": "#/definitions/newObservationUnitDbIdsResponse"
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "examples": {
                                "application/json": {
                                    "metadata": {
                                        "status": [
                                            {
                                                "code": "Error",
                                                "message": "Could not update values for Observation Units"
                                            }
                                        ]
                                    }
                                }
                            },
                            "headers": []
                        }
                    }
                }
            },
            "data_types": []
        },
        "/studies/{studyDbId}/observationunits/zip": {
            "definition": {
                "post": {
                    "tags": [
                        "Observations",
                        "Studies"
                    ],
                    "summary": "Use this call for uploading new Observations as a Batched Zip File to a system.",
                    "description": "Note: If 'observationUnitDbId' or 'observationDbId' is populated, they should be considered updates to existing records. If an existing record of that DbId is not found, the document should be treated as new records and assigned new DbIds. If 'observationUnitDbId' or 'observationDbId' is un-populated (empty string or null) the document should be treated as new records and assigned new DbIds.",
                    "consumes": [
                        "application/zip"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "parameters": [
                        {
                            "name": "studyDbId",
                            "in": "path",
                            "description": "The study these observation units are related to.",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "in": "body",
                            "name": "zipRequest",
                            "required": false,
                            "schema": {
                                "type": "string",
                                "format": "binary"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "examples": {
                                "application/json": {
                                    "metadata": {
                                        "status": [
                                            {
                                                "code": "1",
                                                "message": "Upload Successful"
                                            }
                                        ]
                                    },
                                    "results": {
                                        "observationUnitDbIds": [
                                            "123abc",
                                            "456def"
                                        ]
                                    }
                                }
                            },
                            "headers": [],
                            "schema": {
                                "$ref": "#/definitions/newObservationUnitDbIdsResponse"
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "examples": {
                                "application/json": {
                                    "metadata": {
                                        "status": [
                                            {
                                                "code": "Error",
                                                "message": "Could not update values for Observation Units"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "data_types": []
        },
        "/studies/{studyDbId}/observationvariables": {
            "definition": {
                "get": {
                    "tags": [
                        "Studies",
                        "Observation Variables"
                    ],
                    "summary": "Get Observation Variables By Study",
                    "description": " Scope: PHENOTYPING\nList all the observation variables measured in the study.\nRefer to the data type definition of variables in `/Specification/ObservationVariables/README.md`.\n<a href=\"https://test-server.brapi.org/brapi/v1/studies\"> test-server.brapi.org/brapi/v1/studies/{studyDbId}/observationvariables</a>",
                    "produces": [
                        "application/json"
                    ],
                    "parameters": [
                        {
                            "name": "studyDbId",
                            "in": "path",
                            "description": "string database unique identifier",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "type": "integer"
                        },
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "type": "integer"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "examples": {
                                "application/json": {
                                    "metadata": {
                                        "datafiles": [],
                                        "pagination": {
                                            "currentPage": 0,
                                            "pageSize": 0,
                                            "totalCount": 0,
                                            "totalPages": 0
                                        },
                                        "status": []
                                    },
                                    "result": {
                                        "data": [
                                            {
                                                "defaultValue": "0",
                                                "method": {
                                                    "class": "Estimation",
                                                    "description": "Assessment of the level of yellowness in cassava storage root pulp using the tc chart",
                                                    "methodDbId": "CO_334:0010320",
                                                    "name": "Visual Rating:total carotenoid by chart_method"
                                                },
                                                "name": "CT_M_C",
                                                "observationVariableDbId": "CO_334:0100632",
                                                "ontologyDbId": "CO_334",
                                                "ontologyName": "Cassava",
                                                "scale": {
                                                    "datatype": "Numeric",
                                                    "decimalPlaces": 2,
                                                    "name": "ug/g",
                                                    "scaleDbId": "CO_334:0100526",
                                                    "validValues": {
                                                        "categories": [
                                                            "1=low",
                                                            "2=medium",
                                                            "3=high"
                                                        ],
                                                        "max": 3,
                                                        "min": 1
                                                    }
                                                },
                                                "trait": {
                                                    "name": "Canopy temperature",
                                                    "traitDbId": "CO_334:0100630"
                                                }
                                            },
                                            {
                                                "contextOfUse": [
                                                    "Trial evaluation",
                                                    "Nursery evaluation"
                                                ],
                                                "crop": "Cassava",
                                                "date": "2016-05-13",
                                                "defaultValue": "0",
                                                "growthStage": "mature",
                                                "institution": "",
                                                "language": "EN",
                                                "method": {
                                                    "class": "Estimation",
                                                    "description": "Assessment of the level of yellowness in cassava storage root pulp using the tc chart",
                                                    "methodDbId": "CO_334:0010320",
                                                    "name": "Visual Rating:total carotenoid by chart_method"
                                                },
                                                "name": "caro_spectro",
                                                "observationVariableDbId": "CO_334:0100622",
                                                "ontologyDbId": "CO_334",
                                                "ontologyName": "Cassava",
                                                "scale": {
                                                    "datatype": "Numeric",
                                                    "decimalPlaces": 2,
                                                    "name": "ug/g",
                                                    "scaleDbId": "CO_334:0100526",
                                                    "validValues": {
                                                        "categories": [
                                                            "1=low",
                                                            "2=medium",
                                                            "3=high"
                                                        ],
                                                        "max": 3,
                                                        "min": 1
                                                    }
                                                },
                                                "scientist": "",
                                                "status": "recommended",
                                                "synonyms": [
                                                    "Carotenoid content by spectro"
                                                ],
                                                "trait": {
                                                    "alternativeAbbreviations": [
                                                        "CCS"
                                                    ],
                                                    "attribute": "carotenoid",
                                                    "class": "physiological trait",
                                                    "description": "Cassava storage root pulp carotenoid content",
                                                    "entity": "root",
                                                    "mainAbbreviation": "CC",
                                                    "name": "Carotenoid content",
                                                    "status": "recommended",
                                                    "synonyms": [
                                                        "carotenoid content measure"
                                                    ],
                                                    "traitDbId": "CO_334:0100620",
                                                    "xref": "TL_455:0003023"
                                                },
                                                "xref": "TL_455:0003001"
                                            }
                                        ],
                                        "studyDbId": "35",
                                        "trialName": "myBestTrial"
                                    }
                                }
                            },
                            "headers": [],
                            "schema": {
                                "$ref": "#/definitions/studyObservationVariablesResponse"
                            }
                        }
                    }
                }
            },
            "data_types": []
        },
        "/studies/{studyDbId}/table": {
            "definition": {
                "get": {
                    "tags": [
                        "Studies",
                        "Observations"
                    ],
                    "summary": "Retrieve study Observation Units as table",
                    "description": " Scope: PHENOTYPING. Status: ACCEPTED. Implemented in Cassavabase, HIDAP and Germinate. Notes: Implementation target date: after PAG2016 Retrieve the details of the study required for field data collection. Includes actual trait data.\n<a href=\"https://test-server.brapi.org/brapi/v1/studies\"> test-server.brapi.org/brapi/v1/studies/{studyDbId}/table</a>",
                    "produces": [
                        "application/json",
                        "application/csv",
                        "application/tsv"
                    ],
                    "parameters": [
                        {
                            "name": "studyDbId",
                            "in": "path",
                            "description": "Identifier of the study. Usually a number, could be alphanumeric.",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "name": "format",
                            "in": "query",
                            "description": "The format parameter will cause the data to be dumped to a file in the specified format. Currently, tsv and csv are supported.",
                            "required": false,
                            "type": "string"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "examples": {
                                "application/csv": "year,studyDbId,studyName,locationDbId,locationName,germplasmDbId,germplasmName,observationUnitDbId,plotNumber,replicate,blockNumber,observationTimestamp,entryType,X,Y,variable1DbId,variable2DbId,variable3DbId\n2017,stu1,Study Name,loc1,Location Name,CIP1,CIP Name,abc123,1,1,1,2017-06-16T00:53:26Z,Test Entry,1,2,25.3,103.4,50.75 \n2017,stu1,Study Name,loc1,Location Name,CIP1,CIP Name,abc124,1,1,1,2017-06-16T00:54:57Z,Test Entry,2,2,27.9,98.65,45.345\n",
                                "application/json": {
                                    "metadata": {
                                        "datafiles": [],
                                        "pagination": {
                                            "currentPage": 0,
                                            "pageSize": 0,
                                            "totalCount": 0,
                                            "totalPages": 0
                                        },
                                        "status": []
                                    },
                                    "result": {
                                        "data": [
                                            [
                                                "2017",
                                                "stu1",
                                                "Study Name",
                                                "loc1",
                                                "Location Name",
                                                "CIP1",
                                                "CIP Name",
                                                "abc123",
                                                1,
                                                1,
                                                1,
                                                "2017-06-16T00:53:26Z",
                                                "Test Entry",
                                                "1",
                                                "2",
                                                "25.3",
                                                "103.4",
                                                "50.75"
                                            ],
                                            [
                                                "2017",
                                                "stu1",
                                                "Study Name",
                                                "loc1",
                                                "Location Name",
                                                "CIP1",
                                                "CIP Name",
                                                "abc124",
                                                1,
                                                1,
                                                1,
                                                "2017-06-16T00:54:57Z",
                                                "Test Entry",
                                                "2",
                                                "2",
                                                "27.9",
                                                "98.65",
                                                "45.345"
                                            ]
                                        ],
                                        "headerRow": [
                                            "year",
                                            "studyDbId",
                                            "studyName",
                                            "locationDbId",
                                            "locationName",
                                            "germplasmDbId",
                                            "germplasmName",
                                            "observationUnitDbId",
                                            "plotNumber",
                                            "replicate",
                                            "blockNumber",
                                            "observationTimestamp",
                                            "entryType",
                                            "X",
                                            "Y"
                                        ],
                                        "observationVariableDbIds": [
                                            "variable1DbId",
                                            "variable2DbId",
                                            "variable3DbId"
                                        ],
                                        "observationVariableNames": [
                                            "plant height",
                                            "fruit weight",
                                            "root weight"
                                        ]
                                    }
                                },
                                "application/tsv": "year\tstudyDbId\tstudyName\tlocationDbId\tlocationName\tgermplasmDbId\tgermplasmName\tobservationUnitDbId\tplotNumber\treplicate\tblockNumber\tobservationTimestamp\tentryType\tX\tY\tvariable1DbId\tvariable2DbId\tvariable3DbId\n 2017\tstu1\tStudy Name\tloc1\tLocation Name\tCIP1\tCIP Name\tabc123\t1\t1\t1\t2017-06-16T00:53:26Z\tTest Entry\t1\t2\t25.3\t103.4\t50.75\n 2017\tstu1\tStudy Name\tloc1\tLocation Name\tCIP1\tCIP Name\tabc124\t1\t1\t1\t2017-06-16T00:54:57Z\tTest Entry\t2\t2\t27.9\t98.65\t45.345\n"
                            },
                            "headers": [],
                            "schema": {
                                "$ref": "#/definitions/studyobservationsTableResponse"
                            }
                        }
                    }
                },
                "post": {
                    "tags": [
                        "Studies",
                        "Observations"
                    ],
                    "summary": "Save study Observation Units as table",
                    "description": " This call can be used to create new observations in bulk.\nNote: If you need to update any existing observation, please use `PUT /studies/{studyDbId}/observations`. This call should only be used to create NEW observations.\nImplementation Guidelines:\n+ All observations submitted through this call should create NEW observation records in the database under the given observation unit. + Each \"observationUnitDbId\" listed should already exist in the database. If the server can not find a given \"observationUnitDbId\", it should report an error. (see Error Handling) + The response of this call should be the set of \"observationDbIds\" created from this call, along with the associated \"observationUnitDbId\" and \"observationVariableDbId\" that each observation is associated with.\nImages can optionally be saved using this call by providing a zipped file of all images in the datafiles. The physical zipped file should be transferred as well in the mulit-part form data.\nScope: PHENOTYPING ",
                    "parameters": [
                        {
                            "name": "studyDbId",
                            "in": "path",
                            "description": "Identifier of the study. Usually a number, could be alphanumeric.",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "in": "body",
                            "name": "newObservationsTableRequest",
                            "required": false,
                            "schema": {
                                "$ref": "#/definitions/newObservationsTableRequest"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "examples": {
                                "application/json": {
                                    "metadata": {
                                        "datafiles": [],
                                        "pagination": {
                                            "currentPage": 0,
                                            "pageSize": 0,
                                            "totalCount": 0,
                                            "totalPages": 0
                                        },
                                        "status": []
                                    },
                                    "result": {
                                        "observations": [
                                            {
                                                "observationDbId": "12345",
                                                "observationUnitDbId": "1",
                                                "observationVariableDbId": "variable1DbId"
                                            },
                                            {
                                                "observationDbId": "23456",
                                                "observationUnitDbId": "1",
                                                "observationVariableDbId": "variable2DbId"
                                            },
                                            {
                                                "observationDbId": "34567",
                                                "observationUnitDbId": "1",
                                                "observationVariableDbId": "variable3DbId"
                                            },
                                            {
                                                "observationDbId": "45678",
                                                "observationUnitDbId": "1",
                                                "observationVariableDbId": "imagevariable1DbId"
                                            },
                                            {
                                                "observationDbId": "56789",
                                                "observationUnitDbId": "2",
                                                "observationVariableDbId": "variable1DbId"
                                            },
                                            {
                                                "observationDbId": "67890",
                                                "observationUnitDbId": "2",
                                                "observationVariableDbId": "variable2DbId"
                                            },
                                            {
                                                "observationDbId": "78901",
                                                "observationUnitDbId": "2",
                                                "observationVariableDbId": "variable3DbId"
                                            },
                                            {
                                                "observationDbId": "89012",
                                                "observationUnitDbId": "2",
                                                "observationVariableDbId": "imagevariable1DbId"
                                            }
                                        ]
                                    }
                                }
                            },
                            "headers": [],
                            "schema": {
                                "$ref": "#/definitions/newObservationDbIdsResponse"
                            }
                        }
                    }
                }
            },
            "data_types": []
        },
        "/studyTypes": {
            "definition": {
                "get": {
                    "tags": [
                        "Studies",
                        "Deprecated"
                    ],
                    "summary": "<strong>Deprecated</strong> List study types",
                    "description": " Call to retrieve the list of study types.\nScope: PHENOTYPING. Implementation target date: PAG2016 ",
                    "produces": [
                        "application/json"
                    ],
                    "parameters": [
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "type": "integer"
                        },
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "type": "integer"
                        }
                    ],
                    "deprecated": true,
                    "responses": {
                        "200": {
                            "description": "OK",
                            "examples": {
                                "application/json": {
                                    "metadata": {
                                        "datafiles": [],
                                        "pagination": {
                                            "currentPage": 0,
                                            "pageSize": 1000,
                                            "totalCount": 3,
                                            "totalPages": 1
                                        },
                                        "status": []
                                    },
                                    "result": {
                                        "data": [
                                            {
                                                "description": "Description for Nursery study type",
                                                "name": "Crossing Nursery"
                                            },
                                            {
                                                "description": "Description for Trial study type",
                                                "name": "Yield Trial"
                                            },
                                            {
                                                "description": "Description for Genotyping study type",
                                                "name": "Genotype"
                                            }
                                        ]
                                    }
                                }
                            },
                            "headers": [],
                            "schema": {
                                "$ref": "#/definitions/studyTypesResponse"
                            }
                        }
                    }
                }
            },
            "data_types": []
        },
        "/studytypes": {
            "definition": {
                "get": {
                    "tags": [
                        "Studies"
                    ],
                    "summary": "List study types",
                    "description": " Call to retrieve the list of study types.\nScope: PHENOTYPING. Implementation target date: PAG2016\n<a href=\"https://test-server.brapi.org/brapi/v1/studytypes\"> test-server.brapi.org/brapi/v1/studytypes</a>",
                    "produces": [
                        "application/json"
                    ],
                    "parameters": [
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "type": "integer"
                        },
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "type": "integer"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "examples": {
                                "application/json": {
                                    "metadata": {
                                        "datafiles": [],
                                        "pagination": {
                                            "currentPage": 0,
                                            "pageSize": 1000,
                                            "totalCount": 3,
                                            "totalPages": 1
                                        },
                                        "status": []
                                    },
                                    "result": {
                                        "data": [
                                            {
                                                "description": "Description for Nursery study type",
                                                "name": "Crossing Nursery"
                                            },
                                            {
                                                "description": "Description for Trial study type",
                                                "name": "Yield Trial"
                                            },
                                            {
                                                "description": "Description for Genotyping study type",
                                                "name": "Genotype"
                                            }
                                        ]
                                    }
                                }
                            },
                            "headers": [],
                            "schema": {
                                "$ref": "#/definitions/studyTypesResponse"
                            }
                        }
                    }
                }
            },
            "data_types": []
        },
        "/token": {
            "definition": {
                "post": {
                    "tags": [
                        "Authentication",
                        "Deprecated"
                    ],
                    "summary": "Login",
                    "description": "",
                    "produces": [
                        "application/json"
                    ],
                    "parameters": [],
                    "deprecated": true,
                    "responses": {
                        "201": {
                            "description": "Created",
                            "examples": {
                                "application/json": {
                                    "access_token": "R6gKDBRxM4HLj6eGi4u5HkQjYoIBTPfvtZzUD8TUzg4",
                                    "expires_in": "The lifetime in seconds of the access token",
                                    "metadata": {
                                        "datafiles": [],
                                        "pagination": {
                                            "currentPage": 0,
                                            "pageSize": 0,
                                            "totalCount": 0,
                                            "totalPages": 0
                                        },
                                        "status": []
                                    },
                                    "userDisplayName": "John Smith"
                                }
                            },
                            "headers": []
                        }
                    }
                },
                "delete": {
                    "tags": [
                        "Authentication",
                        "Deprecated"
                    ],
                    "summary": "Logout",
                    "description": "",
                    "parameters": [],
                    "deprecated": true,
                    "responses": {
                        "201": {
                            "description": "Created",
                            "examples": [],
                            "headers": []
                        }
                    }
                }
            },
            "data_types": []
        },
        "/traits": {
            "definition": {
                "get": {
                    "tags": [
                        "Observation Variables"
                    ],
                    "summary": "List all traits",
                    "description": " Scope: CORE. Status: ACCEPTED.\nImplemented by: Germinate, Cassavabase\nCall to retrieve a list of traits available in the system and their associated variables.\n<a href=\"https://test-server.brapi.org/brapi/v1/traits\"> test-server.brapi.org/brapi/v1/traits</a>",
                    "produces": [
                        "application/json"
                    ],
                    "parameters": [
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "type": "integer"
                        },
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "type": "integer"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "examples": {
                                "application/json": {
                                    "metadata": {
                                        "datafiles": [],
                                        "pagination": {
                                            "currentPage": 0,
                                            "pageSize": 1000,
                                            "totalCount": 2,
                                            "totalPages": 1
                                        },
                                        "status": []
                                    },
                                    "result": {
                                        "data": [
                                            {
                                                "description": "Description of Plant Height",
                                                "name": "Plant Height",
                                                "observationVariables": [
                                                    "CO_334:0100121",
                                                    "CO_334:0100122",
                                                    "CO_334:0100123"
                                                ],
                                                "traitDbId": "123",
                                                "traitId": "CO:123000007"
                                            },
                                            {
                                                "description": "Cassava storage root pulp carotenoid content",
                                                "name": "Carotenoid content",
                                                "observationVariables": [
                                                    "CO_334:0100621",
                                                    "CO_334:0100622",
                                                    "CO_334:0100623"
                                                ],
                                                "traitDbId": "123",
                                                "traitId": "CO_334:0100620"
                                            }
                                        ]
                                    }
                                }
                            },
                            "headers": [],
                            "schema": {
                                "$ref": "#/definitions/traitsResponse"
                            }
                        }
                    }
                }
            },
            "data_types": []
        },
        "/traits/{traitDbId}": {
            "definition": {
                "get": {
                    "tags": [
                        "Observation Variables"
                    ],
                    "summary": "Retrieve trait details by id",
                    "description": " Scope: CORE. Status: ACCEPTED.\nImplemented by: Germinate\nRetrieve the variables associated to a trait\n<a href=\"https://test-server.brapi.org/brapi/v1/traits\"> test-server.brapi.org/brapi/v1/traits/{traitDbId}</a>",
                    "produces": [
                        "application/json"
                    ],
                    "parameters": [
                        {
                            "name": "traitDbId",
                            "in": "path",
                            "description": "Id of the trait to retrieve details of.",
                            "required": true,
                            "type": "string"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "examples": {
                                "application/json": {
                                    "metadata": {
                                        "datafiles": [],
                                        "pagination": {
                                            "currentPage": 0,
                                            "pageSize": 0,
                                            "totalCount": 0,
                                            "totalPages": 0
                                        },
                                        "status": []
                                    },
                                    "result": {
                                        "description": "Description of Plant Height",
                                        "name": "Plant Height",
                                        "observationVariables": [
                                            "CO_334:0100121",
                                            "CO_334:0100122",
                                            "CO_334:0100123"
                                        ],
                                        "traitDbId": "123",
                                        "traitId": "CO:123000007"
                                    }
                                }
                            },
                            "headers": [],
                            "schema": {
                                "$ref": "#/definitions/traitResponse"
                            }
                        }
                    }
                }
            },
            "data_types": []
        },
        "/trials": {
            "definition": {
                "get": {
                    "tags": [
                        "Trials"
                    ],
                    "summary": "List of trial summaries",
                    "description": " Scope: PHENOTYPING. Status: ACCEPTED. Implementation target date: PAG2016.\n<a href=\"https://test-server.brapi.org/brapi/v1/trials\"> test-server.brapi.org/brapi/v1/trials</a>",
                    "produces": [
                        "application/json"
                    ],
                    "parameters": [
                        {
                            "name": "programDbId",
                            "in": "query",
                            "description": "Program filter to only return trials associated with given program id.",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "name": "locationDbId",
                            "in": "query",
                            "description": "Filter by location",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "type": "integer"
                        },
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "type": "integer"
                        },
                        {
                            "name": "active",
                            "in": "query",
                            "description": "Filter active status true/false.",
                            "required": false,
                            "type": "boolean"
                        },
                        {
                            "name": "sortBy",
                            "in": "query",
                            "description": "Sort order. Name of the field to sorty by.",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "name": "sortOrder",
                            "in": "query",
                            "description": "Sort order direction: asc/desc",
                            "required": false,
                            "type": "string"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "examples": {
                                "application/json": {
                                    "metadata": {
                                        "datafiles": [],
                                        "pagination": {
                                            "currentPage": 0,
                                            "pageSize": 1000,
                                            "totalCount": 2,
                                            "totalPages": 1
                                        },
                                        "status": []
                                    },
                                    "result": {
                                        "data": [
                                            {
                                                "active": "false",
                                                "additionalInfo": {
                                                    "property1Name": "property1Value",
                                                    "property2Name": "property2Value",
                                                    "property3Name": "property3Value"
                                                },
                                                "endDate": "2008-12-31",
                                                "programDbId": "27",
                                                "programName": "International Yield Trial",
                                                "startDate": "2007-06-01",
                                                "studies": [
                                                    {
                                                        "locationName": "Zimbabwe",
                                                        "studyDbId": "1",
                                                        "studyName": "Zimbabwe Yield Trial"
                                                    },
                                                    {
                                                        "locationName": "Kenya",
                                                        "studyDbId": "2",
                                                        "studyName": "Kenya Yield Trial"
                                                    }
                                                ],
                                                "trialDbId": "1",
                                                "trialName": "InternationalTrialA"
                                            },
                                            {
                                                "active": "true",
                                                "additionalInfo": {
                                                    "property1Name": "property1Value",
                                                    "property2Name": "property2Value",
                                                    "property3Name": "property3Value"
                                                },
                                                "endDate": "2009-12-31",
                                                "programDbId": "35",
                                                "programName": "International Yield Trial 2: Return of the Trial",
                                                "startDate": "2008-06-01",
                                                "studies": [
                                                    {
                                                        "locationName": "Zimbabwe",
                                                        "studyDbId": "3",
                                                        "studyName": "Zimbabwe Yield Trial"
                                                    },
                                                    {
                                                        "locationName": "Kenya",
                                                        "studyDbId": "4",
                                                        "studyName": "Kenya Yield Trial"
                                                    }
                                                ],
                                                "trialDbId": "2",
                                                "trialName": "InternationalTrialB"
                                            }
                                        ]
                                    }
                                }
                            },
                            "headers": [],
                            "schema": {
                                "$ref": "#/definitions/trialsResponse"
                            }
                        }
                    }
                }
            },
            "data_types": []
        },
        "/trials/{trialDbId}": {
            "definition": {
                "get": {
                    "tags": [
                        "Trials"
                    ],
                    "summary": "Get trial by Id",
                    "description": " Scope: PHENOTYPING. Status: ACCEPTED. Implementation target date: PAG2016.\nGet trial by id.\n<a href=\"https://test-server.brapi.org/brapi/v1/trials\"> test-server.brapi.org/brapi/v1/trials/{trialDbId}</a>",
                    "produces": [
                        "application/json"
                    ],
                    "parameters": [
                        {
                            "name": "trialDbId",
                            "in": "path",
                            "description": "The internal trialDbId",
                            "required": true,
                            "type": "string"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "examples": {
                                "application/json": {
                                    "metadata": {
                                        "datafiles": [],
                                        "pagination": {
                                            "currentPage": 0,
                                            "pageSize": 0,
                                            "totalCount": 0,
                                            "totalPages": 0
                                        },
                                        "status": []
                                    },
                                    "result": {
                                        "active": "true",
                                        "additionalInfo": {
                                            "property2Name": "property2Value",
                                            "property3Name": "property3Value",
                                            "publications": "pmid:239823988, doi:10.2345/GEZG3T23535"
                                        },
                                        "contacts": [
                                            {
                                                "contactDbId": "C025",
                                                "email": "j.doe@mail.com",
                                                "instituteName": "IRRI",
                                                "name": "John Doe",
                                                "orcid": "0000-0002-0607-8728",
                                                "type": "Scientist"
                                            },
                                            {
                                                "contactDbId": "C026",
                                                "instituteName": "IRRI",
                                                "name": "Dave Peters"
                                            }
                                        ],
                                        "datasetAuthorship": {
                                            "datasetPUI": "doi:10.15454/312953986E3",
                                            "license": "https://creativecommons.org/licenses/by/4.0"
                                        },
                                        "endDate": "2008-12-31",
                                        "programDbId": 27,
                                        "programName": "International Yield Trial",
                                        "startDate": "2007-06-01",
                                        "studies": [
                                            {
                                                "locationDbId": "z-2",
                                                "locationName": "Zimbabwe",
                                                "studyDbId": 1,
                                                "studyName": "Zimbabwe Yield Trial"
                                            },
                                            {
                                                "locationDbId": "k-1",
                                                "locationName": "Kenya",
                                                "studyDbId": 2,
                                                "studyName": "Kenya Yield Trial"
                                            }
                                        ],
                                        "trialDbId": 1,
                                        "trialName": "InternationalTrialA"
                                    }
                                }
                            },
                            "headers": [],
                            "schema": {
                                "$ref": "#/definitions/trialResponse"
                            }
                        }
                    }
                }
            },
            "data_types": []
        },
        "/variables": {
            "definition": {
                "get": {
                    "tags": [
                        "Observation Variables"
                    ],
                    "summary": "Variable list",
                    "description": "Call to retrieve a list of observationVariables available in the system. <br>\n<strong>Scope:</strong> CORE.\n<strong>Status:</strong> ACCEPTED.",
                    "produces": [
                        "application/json"
                    ],
                    "parameters": [
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "type": "integer"
                        },
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "type": "integer"
                        },
                        {
                            "name": "traitClass",
                            "in": "query",
                            "description": "Variable's trait class (phenological, physiological, morphological, etc.)",
                            "required": false,
                            "type": "string"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "examples": {
                                "application/json": {
                                    "metadata": {
                                        "datafiles": [],
                                        "pagination": {
                                            "currentPage": 0,
                                            "pageSize": 1000,
                                            "totalCount": 2,
                                            "totalPages": 1
                                        },
                                        "status": []
                                    },
                                    "result": {
                                        "data": [
                                            {
                                                "method": {
                                                    "class": "Estimation",
                                                    "methodDbId": "CO_334:0010320",
                                                    "name": "Visual Rating:total carotenoid by chart_method"
                                                },
                                                "name": "CT_M_C",
                                                "observationVariableDbId": "CO_334:0100632",
                                                "ontologyDbId": "CO_334",
                                                "ontologyName": "Cassava",
                                                "scale": {
                                                    "dataType": "Numeric",
                                                    "decimalPlaces": 2,
                                                    "name": "ug/g",
                                                    "scaleDbId": "CO_334:0100526",
                                                    "validValues": {
                                                        "categories": [
                                                            "1=low",
                                                            "2=medium",
                                                            "3=high"
                                                        ],
                                                        "max": 3,
                                                        "min": 1
                                                    }
                                                },
                                                "trait": {
                                                    "class": "physiological trait",
                                                    "name": "Canopy temperature",
                                                    "traitDbId": "CO_334:0100630"
                                                }
                                            },
                                            {
                                                "contextOfUse": [
                                                    "Trial evaluation",
                                                    "Nursery evaluation"
                                                ],
                                                "crop": "Cassava",
                                                "growthStage": "mature",
                                                "institution": "",
                                                "language": "EN",
                                                "method": {
                                                    "class": "Estimation",
                                                    "description": "Assessment of the level of yellowness in cassava storage root pulp using the tc chart",
                                                    "methodDbId": "CO_334:0010320",
                                                    "name": "Visual Rating:total carotenoid by chart_method"
                                                },
                                                "name": "caro_spectro",
                                                "observationVariableDbId": "CO_334:0100622",
                                                "ontologyDbId": "CO_334",
                                                "ontologyName": "Cassava",
                                                "scale": {
                                                    "dataType": "Numeric",
                                                    "decimalPlaces": 2,
                                                    "name": "ug/g",
                                                    "scaleDbId": "CO_334:0100526",
                                                    "validValues": {
                                                        "categories": [
                                                            "1=low",
                                                            "2=medium",
                                                            "3=high"
                                                        ],
                                                        "max": 3,
                                                        "min": 1
                                                    }
                                                },
                                                "scientist": "",
                                                "status": "recommended",
                                                "submissionTimestamp": "2016-05-13T17:43:11+01:00",
                                                "synonyms": [
                                                    "Carotenoid content by spectro"
                                                ],
                                                "trait": {
                                                    "alternativeAbbreviations": [
                                                        "CCS"
                                                    ],
                                                    "attribute": "carotenoid",
                                                    "class": "physiological trait",
                                                    "description": "Cassava storage root pulp carotenoid content",
                                                    "entity": "root",
                                                    "mainAbbreviation": "CC",
                                                    "name": "Carotenoid content",
                                                    "status": "recommended",
                                                    "synonyms": [
                                                        "carotenoid content measure"
                                                    ],
                                                    "traitDbId": "CO_334:0100620",
                                                    "xref": "TL_455:0003023"
                                                },
                                                "xref": "TL_455:0003001"
                                            }
                                        ]
                                    }
                                }
                            },
                            "headers": [],
                            "schema": {
                                "$ref": "#/definitions/observationVariablesResponse"
                            }
                        }
                    }
                }
            },
            "data_types": []
        },
        "/variables-search": {
            "definition": {
                "post": {
                    "tags": [
                        "Observation Variables"
                    ],
                    "summary": "Variable search",
                    "description": "Search observation variables.\nSee <a href=\"https://brapi.docs.apiary.io/#introduction/search-services\">Search Services</a> for additional implementation details. <br>\n<strong>Scope:</strong> CORE.\n<strong>Status:</strong> ACCEPTED.",
                    "produces": [
                        "application/json"
                    ],
                    "parameters": [
                        {
                            "in": "body",
                            "name": "body",
                            "required": false,
                            "schema": {
                                "$ref": "#/definitions/observationVariableSearchRequest"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "examples": {
                                "application/json": {
                                    "metadata": {
                                        "datafiles": [],
                                        "pagination": {
                                            "currentPage": 0,
                                            "pageSize": 2,
                                            "totalCount": 300,
                                            "totalPages": 150
                                        },
                                        "status": []
                                    },
                                    "result": {
                                        "data": [
                                            {
                                                "name": "CT_M_C",
                                                "observationVariableDbId": "CO_334:0100632",
                                                "ontologyDbId": "CO_334",
                                                "ontologyName": "Cassava",
                                                "trait": {
                                                    "name": "Canopy temperature",
                                                    "traitDbId": "CO_334:0100630"
                                                }
                                            },
                                            {
                                                "contextOfUse": [
                                                    "Trial evaluation",
                                                    "Nursery evaluation"
                                                ],
                                                "crop": "Cassava",
                                                "growthStage": "mature",
                                                "institution": "",
                                                "language": "EN",
                                                "method": {
                                                    "class": "Estimation",
                                                    "description": "Assessment of the level of yellowness in cassava storage root pulp using the tc chart",
                                                    "methodDbId": "CO_334:0010320",
                                                    "name": "Visual Rating:total carotenoid by chart_method"
                                                },
                                                "name": "caro_spectro",
                                                "observationVariableDbId": "CO_334:0100622",
                                                "ontologyDbId": "CO_334",
                                                "ontologyName": "Cassava",
                                                "scale": {
                                                    "dataType": "Numeric",
                                                    "decimalPlaces": 2,
                                                    "name": "ug/g",
                                                    "scaleDbId": "CO_334:0100526",
                                                    "validValues": {
                                                        "categories": [
                                                            "1=low",
                                                            "2=medium",
                                                            "3=high"
                                                        ],
                                                        "max": 3,
                                                        "min": 1
                                                    }
                                                },
                                                "scientist": "",
                                                "status": "recommended",
                                                "submissionTimestamp": "2016-05-13T23:21:56+01:00",
                                                "synonyms": [
                                                    "Carotenoid content by spectro"
                                                ],
                                                "trait": {
                                                    "alternativeAbbreviations": [
                                                        "CCS"
                                                    ],
                                                    "attribute": "carotenoid",
                                                    "class": "physiological trait",
                                                    "description": "Cassava storage root pulp carotenoid content",
                                                    "entity": "root",
                                                    "mainAbbreviation": "CC",
                                                    "name": "Carotenoid content",
                                                    "status": "recommended",
                                                    "synonyms": [
                                                        "carotenoid content measure"
                                                    ],
                                                    "traitDbId": "CO_334:0100620",
                                                    "xref": "TL_455:0003023"
                                                },
                                                "xref": "TL_455:0003001"
                                            }
                                        ]
                                    }
                                }
                            },
                            "headers": [],
                            "schema": {
                                "properties": {
                                    "metadata": {
                                        "$ref": "#/definitions/metadata"
                                    },
                                    "result": {
                                        "type": "object",
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#/definitions/observationVariable"
                                                }
                                            }
                                        }
                                    }
                                },
                                "title": "observationVariablesResponse"
                            }
                        }
                    }
                }
            },
            "data_types": []
        },
        "/variables/datatypes": {
            "definition": {
                "get": {
                    "tags": [
                        "Observation Variables"
                    ],
                    "summary": "Variable data type list",
                    "description": "Call to retrieve a list of data types the variable can have.",
                    "produces": [
                        "application/json"
                    ],
                    "parameters": [
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "type": "integer"
                        },
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "type": "integer"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "examples": {
                                "application/json": {
                                    "metadata": {
                                        "datafiles": [],
                                        "pagination": {
                                            "currentPage": 0,
                                            "pageSize": 1000,
                                            "totalCount": 6,
                                            "totalPages": 1
                                        },
                                        "status": []
                                    },
                                    "result": {
                                        "data": [
                                            "Numeric",
                                            "Categorical",
                                            "Date",
                                            "Text",
                                            "Picture",
                                            "Boolean"
                                        ]
                                    }
                                }
                            },
                            "headers": [],
                            "schema": {
                                "properties": {
                                    "metadata": {
                                        "$ref": "#/definitions/metadata"
                                    },
                                    "result": {
                                        "type": "object",
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                },
                                "title": "dataTypesResponse"
                            }
                        }
                    }
                }
            },
            "data_types": []
        },
        "/variables/{observationVariableDbId}": {
            "definition": {
                "get": {
                    "tags": [
                        "Observation Variables"
                    ],
                    "summary": "Variable details by id",
                    "description": "Retrieve variable details <br>\n<strong>Scope:</strong> CORE\n<strong>Status:</strong> ACCEPTED",
                    "produces": [
                        "application/json"
                    ],
                    "parameters": [
                        {
                            "name": "observationVariableDbId",
                            "in": "path",
                            "description": "string id of the variable",
                            "required": true,
                            "type": "string"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "examples": {
                                "application/json": {
                                    "metadata": {
                                        "datafiles": [],
                                        "pagination": {
                                            "currentPage": 0,
                                            "pageSize": 0,
                                            "totalCount": 0,
                                            "totalPages": 0
                                        },
                                        "status": []
                                    },
                                    "result": {
                                        "contextOfUse": [
                                            "Trial evaluation",
                                            "Nursery evaluation"
                                        ],
                                        "crop": "Cassava",
                                        "growthStage": "mature",
                                        "institution": "",
                                        "language": "EN",
                                        "method": {
                                            "class": "Estimation",
                                            "description": "Assessment of the level of yellowness in cassava storage root pulp using the tc chart",
                                            "methodDbId": "CO_334:0010320",
                                            "name": "Visual Rating:total carotenoid by chart_method"
                                        },
                                        "name": "caro_spectro",
                                        "observationVariableDbId": "CO_334:0100632",
                                        "ontologyDbId": "CO_334",
                                        "ontologyName": "Cassava",
                                        "scale": {
                                            "dataType": "Numeric",
                                            "decimalPlaces": 2,
                                            "name": "ug/g",
                                            "scaleDbId": "CO_334:0100526",
                                            "validValues": {
                                                "categories": [
                                                    "1=low",
                                                    "2=medium",
                                                    "3=high"
                                                ],
                                                "max": 3,
                                                "min": 1
                                            }
                                        },
                                        "scientist": "",
                                        "status": "recommended",
                                        "submissionTimestamp": "2016-05-13T15:43:41+01:00",
                                        "synonyms": [
                                            "Carotenoid content by spectro"
                                        ],
                                        "trait": {
                                            "alternativeAbbreviations": [
                                                "CCS"
                                            ],
                                            "attribute": "carotenoid",
                                            "class": "physiological trait",
                                            "description": "Cassava storage root pulp carotenoid content",
                                            "entity": "root",
                                            "mainAbbreviation": "CC",
                                            "name": "Carotenoid content",
                                            "status": "recommended",
                                            "synonyms": [
                                                "carotenoid content measure"
                                            ],
                                            "traitDbId": "CO_334:0100620",
                                            "xref": "TL_455:0003023"
                                        },
                                        "xref": "TL_455:0003001"
                                    }
                                }
                            },
                            "headers": [],
                            "schema": {
                                "$ref": "#/definitions/observationVariableResponse"
                            }
                        }
                    }
                }
            },
            "data_types": []
        },
        "/vendor/plates": {
            "definition": {
                "post": {
                    "tags": [
                        "Vendor Samples"
                    ],
                    "summary": "Register plates",
                    "description": "Note: if the samples array is empty, plate ID will be returned.\nSamples can be updated later.",
                    "parameters": [
                        {
                            "in": "body",
                            "name": "body",
                            "required": false,
                            "schema": {
                                "$ref": "#/definitions/vendorPlateRequest"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "examples": [],
                            "headers": [],
                            "schema": {
                                "$ref": "#/definitions/vendorPlatesResponse"
                            }
                        }
                    }
                }
            },
            "data_types": []
        },
        "/vendor/plates-search": {
            "definition": {
                "get": {
                    "tags": [
                        "Vendor Samples",
                        "Search Services"
                    ],
                    "summary": "Search for plates",
                    "description": "Search for plates in the database.\n\n<a href=\"https://test-server.brapi.org/brapi/v1/vendor/plates-search\"> test-server.brapi.org/brapi/v1/vendor/plates-search</a>",
                    "parameters": [
                        {
                            "name": "vendorProjectDbId",
                            "in": "query",
                            "description": "",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "name": "vendorPlateDbId",
                            "in": "query",
                            "description": "",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "name": "clientPlateDbId",
                            "in": "query",
                            "description": "",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "name": "sampleInfo",
                            "in": "query",
                            "description": "",
                            "required": false,
                            "type": "boolean"
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "The size of the pages to be returned. Default is `1000`.",
                            "required": false,
                            "type": "integer"
                        },
                        {
                            "name": "page",
                            "in": "query",
                            "description": "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.",
                            "required": false,
                            "type": "integer"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "examples": [],
                            "headers": [],
                            "schema": {
                                "$ref": "#/definitions/vendorPlatesResponse"
                            }
                        }
                    }
                },
                "post": {
                    "tags": [
                        "Vendor Samples",
                        "Search Services"
                    ],
                    "summary": "Search for plates",
                    "description": "Search for plates in the database.\n\n<a href=\"https://test-server.brapi.org/brapi/v1/vendor\"> test-server.brapi.org/brapi/v1/vendor/plate-search</a>",
                    "parameters": [
                        {
                            "in": "body",
                            "name": "body",
                            "required": false,
                            "schema": {
                                "$ref": "#/definitions/vendorPlateSearchRequest"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "examples": [],
                            "headers": [],
                            "schema": {
                                "$ref": "#/definitions/vendorPlatesResponse"
                            }
                        }
                    }
                }
            },
            "data_types": []
        },
        "/vendor/plates/{vendorPlateDbId}": {
            "definition": {
                "get": {
                    "tags": [
                        "Vendor Samples"
                    ],
                    "summary": "Plate Details by vendorPlateId",
                    "description": " Response data types \n <table> <thead> <tr> <th>Variable</th> <th>Datatype</th> <th>Description</th> <th>Required</th> </tr> </thead> <tbody> <tr> <td>metadata</td> <td>object</td> <td>pagination, status</td> <td>Y</td> </tr> <tr> <td>pagination</td> <td>object</td> <td>pageSize, currentPage, totalCount, totalPages</td> <td>Y</td> </tr> <tr> <td>status</td> <td>list</td> <td>code, message</td> <td>Y</td> </tr> <tr> <td>result</td> <td>Object</td> <td>Object containing MCPD data</td> <td>Y</td> </tr> <tr> <td>vendorProjectDbId</td> <td>string</td> <td>the name or identifier given to a project by the vendor</td> <td>Y</td> </tr> <tr> <td>vendorPlateDbId</td> <td>string</td> <td>the name or identifier of the plate, given by the vendor</td> <td>Y</td> </tr> <tr> <td>clientPlateDbId</td> <td>string</td> <td>the name of the plate, given by the client</td> <td>Y</td> </tr> <tr> <td>barcode</td> <td>string</td> <td>a string that can be represented as a barcode, identifying this plate</td> <td>N</td> </tr> <tr> <td>plateFormat</td> <td>string</td> <td>defines that plate format, usually Plate_96 or tubes for plateless format</td> <td>Y</td> </tr> <tr> <td>sampleType</td> <td>string</td> <td>DNA or RNA or Tissue, etc.</td> <td>Y</td> </tr> <tr> <td>status</td> <td>string</td> <td>The status of the plate in the processing pipeline. Typically,  &quot;Received&quot;, &quot;Processing&quot;, &quot;QC_passed&quot;, QC_failed&quot;, &quot;Completed&quot; (as per vendor-requirements call)</td> <td>Y</td> </tr> <tr> <td>samples</td> <td>Array</td> <td>list of samples in the plate</td> <td>Y</td> </tr> </tbody> </table>\n <a href=\"https://test-server.brapi.org/brapi/v1/vendor\"> test-server.brapi.org/brapi/v1/vendor/plate/{vendorPlateDbId}</a>",
                    "produces": [
                        "application/json"
                    ],
                    "parameters": [
                        {
                            "name": "vendorPlateDbId",
                            "in": "path",
                            "description": "The plate ID defined by the vendor",
                            "required": true,
                            "type": "string"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "examples": {
                                "application/json": {
                                    "metadata": {
                                        "datafiles": [],
                                        "pagination": {
                                            "currentPage": 0,
                                            "pageSize": 0,
                                            "totalCount": 0,
                                            "totalPages": 0
                                        },
                                        "status": []
                                    },
                                    "result": {
                                        "clientPlateDbId": "def456",
                                        "plateFormat": "Plate_96",
                                        "sampleType": "DNA",
                                        "samples": [
                                            {
                                                "column": "(optional)",
                                                "concentration": "(ng/ul)",
                                                "row": "(optional)",
                                                "sampleDbId": "sample_name",
                                                "taxonId": {
                                                    "sourceName": "ncbiTaxon",
                                                    "taxonId": "http://purl.obolibrary.org/obo/NCBITaxon_4641"
                                                },
                                                "tissueType": "",
                                                "volume": "(ul)",
                                                "well": "(optional)"
                                            }
                                        ],
                                        "status": "(not null)",
                                        "statusTimeStamp": "2017-06-01 01:57 GMT",
                                        "vendorBarcode": "",
                                        "vendorBarcodeImageURL": "",
                                        "vendorPlateDbId": "8338",
                                        "vendorProjectDbId": "abc123"
                                    }
                                }
                            },
                            "headers": [],
                            "schema": {
                                "$ref": "#/definitions/vendorPlateResponse"
                            }
                        }
                    }
                }
            },
            "data_types": []
        },
        "/vendor/specifications": {
            "definition": {
                "get": {
                    "tags": [
                        "Vendor Samples"
                    ],
                    "summary": "Vendor specification",
                    "description": " Defines the plate format specification for the vendor.\n<a href=\"https://test-server.brapi.org/brapi/v1/vendor\"> test-server.brapi.org/brapi/v1/vendor/specifications</a>",
                    "produces": [
                        "application/json"
                    ],
                    "parameters": [],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "examples": {
                                "application/json": {
                                    "metadata": {
                                        "datafiles": [],
                                        "pagination": {
                                            "currentPage": 0,
                                            "pageSize": 0,
                                            "totalCount": 0,
                                            "totalPages": 0
                                        },
                                        "status": []
                                    },
                                    "result": {
                                        "additionalInfo": [],
                                        "contactName": "John Doe",
                                        "platforms": [
                                            {
                                                "contactEmail": "",
                                                "contactName": "",
                                                "contactPhone": "",
                                                "deliverables": [
                                                    {
                                                        "description": "",
                                                        "format": "",
                                                        "name": ""
                                                    }
                                                ],
                                                "platformDescription": "",
                                                "platformName": "GBS",
                                                "platformURL": "",
                                                "shippingAddress": "",
                                                "specificRequirements": [],
                                                "standardRequirements": {
                                                    "blankWellPosition": {
                                                        "numberOfBlanksPerPlate": "",
                                                        "positions": [
                                                            "random",
                                                            "A01",
                                                            "H12"
                                                        ]
                                                    },
                                                    "inputFormatDetails": "https://...",
                                                    "inputFormats": [
                                                        "Plate_96",
                                                        "Tubes"
                                                    ],
                                                    "maxConcentration": "",
                                                    "maxVolume": "",
                                                    "minConcentration": "",
                                                    "minSampleNumber": "",
                                                    "minVolume": "",
                                                    "plateOrientation": "rowFirst|columnFirst",
                                                    "sampleTypeDetails": "https://...",
                                                    "sampleTypes": [
                                                        "",
                                                        ""
                                                    ]
                                                },
                                                "statuses": [
                                                    {
                                                        "statusDescription": "Platesarereceivedbyvendor.",
                                                        "statusName": "received"
                                                    },
                                                    {
                                                        "statusDescription": "Resultfilesareready.",
                                                        "statusName": "completed"
                                                    },
                                                    {
                                                        "statusDescription": "Platesarerejectedbyvendor",
                                                        "statusName": "rejected"
                                                    }
                                                ],
                                                "taxonomyIdSystem": {
                                                    "URI": "https://...",
                                                    "name": "NCBITaxonomyId"
                                                },
                                                "tissueIdSystem": {
                                                    "URI": "https://...",
                                                    "name": "DArT"
                                                }
                                            }
                                        ],
                                        "vendorAddress": "123 Lane St",
                                        "vendorCity": "Metropolis",
                                        "vendorCountry": "USA",
                                        "vendorDescription": "Gene Sequencing Vendor",
                                        "vendorEmail": "jdoe@example.org",
                                        "vendorName": "Gene Sequencing Vendor",
                                        "vendorPhone": "1-234-567-8910",
                                        "vendorURL": "www.example.org"
                                    }
                                }
                            },
                            "headers": [],
                            "schema": {
                                "$ref": "#/definitions/vendorSpecificationResponse"
                            }
                        }
                    }
                }
            },
            "data_types": []
        }
    },
    "data_types": [],
    "fields": {
        "newObservationUnitRequest": {
            "type": "",
            "description": "",
            "example": "",
            "calls": {
                "/studies/{studyDbId}/observationunits": true
            },
            "data_types": []
        },
        "zipRequest": {
            "type": "",
            "description": "",
            "example": "",
            "calls": {
                "/studies/{studyDbId}/observationunits/zip": true
            },
            "data_types": []
        }
    }
}